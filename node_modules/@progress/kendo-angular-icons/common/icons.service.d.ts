/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy } from '@angular/core';
import { Subject } from 'rxjs';
import { IconSettings } from './models';
import { IconSettingsService } from './icon-settings.service';
import { SVGIcon } from '@progress/kendo-svg-icons';
import * as i0 from "@angular/core";
/**
 * Represents the service that manages icon settings.
 * Add this service to the `providers` array when you use it in a standalone component.
 *
 * @example
 * ```typescript
 * import { IconsService } from '@progress/kendo-angular-icons';
 *
 * @Component({
 *   selector: 'my-component',
 *   standalone: true,
 *   imports: [ ... ],
 *   providers: [IconsService, { provide: ICON_SETTINGS, useValue: { type: 'font' } }],
 *   template: `...`
 * })
 * export class AppComponent {}
 * ```
 */
export declare class IconsService implements OnDestroy {
    private _iconSettings;
    private iconSettingsService;
    /**
     * Notifies subscribers of the initial icon settings and on each call to `notify`.
     * @hidden
     */
    readonly changes: Subject<IconSettings>;
    private subs;
    constructor(_iconSettings: IconSettings, iconSettingsService: IconSettingsService);
    /**
     * @hidden
     */
    get iconSettings(): IconSettings;
    ngOnDestroy(): void;
    /**
     * Returns the [`SVGIcon`](slug:api_icons_svgicon) object for the provided key.
     * Override in a custom service to provide custom SVG icons.
     * @hidden
     */
    getSvgIcon(name: string): SVGIcon;
    /**
     * Returns the list of classes to be rendered on the host `SPAN` element of custom font icons.
     * Override in a custom service to provide classes for custom font icons.
     * @hidden
     */
    getCustomFontIconClass(key: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<IconsService, [{ optional: true; }, { optional: true; }]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<IconsService>;
}
