/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, Renderer2, OnInit } from '@angular/core';
import { DomSanitizer, SafeHtml } from "@angular/platform-browser";
import { IconBaseDirective } from '../common/icon-base';
import { SVGIcon } from '@progress/kendo-svg-icons';
import * as i0 from "@angular/core";
/**
 * Represents the [Kendo UI SVG Icon component for Angular](slug:overview_svgicon).
 * Used to display icons from the [Kendo UI SVG Icons](slug:svgicon_list) collection.
 *
 * @example
 * ```ts
 * import { KENDO_ICONS } from "@progress/kendo-angular-icons";
 * import { paperclipIcon } from "@progress/kendo-svg-icons";
 *
 * @Component({
 *  selector: "my-app",
 *  imports: [KENDO_ICONS],
 *  template: `
 *   <kendo-svg-icon [icon]="paperclipIcon"></kendo-svg-icon>
 *  `,
 *  providers: [],
 * })
 * export class AppComponent {
 *  public paperclipIcon = paperclipIcon;
 * }
 * ```
 */
export declare class SVGIconComponent extends IconBaseDirective implements OnInit {
    private domSanitizer;
    element: ElementRef;
    renderer: Renderer2;
    hostClass: boolean;
    hostAriaHidden: boolean;
    /**
     * Sets the `SVGIcon` to render. Supports all [Kendo UI SVG Icons](slug:svgicon_list).
     */
    set icon(icon: SVGIcon);
    get icon(): SVGIcon;
    get content(): SafeHtml;
    get visible(): boolean;
    private _icon;
    constructor(domSanitizer: DomSanitizer, element: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    private verifyIconProperty;
    static ɵfac: i0.ɵɵFactoryDeclaration<SVGIconComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SVGIconComponent, "kendo-svg-icon, kendo-svgicon", ["kendoSVGIcon"], { "icon": { "alias": "icon"; "required": false; }; }, {}, never, never, true, never>;
}
