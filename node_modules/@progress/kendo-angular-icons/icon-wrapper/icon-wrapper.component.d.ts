/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, OnDestroy } from '@angular/core';
import { SVGIcon } from '@progress/kendo-svg-icons';
import { IconsService } from '../common/icons.service';
import { IconSettings, IconSize } from '../common/models';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class IconWrapperComponent implements OnDestroy {
    private iconsService;
    element: ElementRef;
    hostClass: boolean;
    /**
     * Sets the name for an existing font icon in a Kendo UI theme to render.
     * Supports all [Kendo UI Icons](slug:icons#icons-list).
     */
    name: string;
    /**
     * Sets the [SVGIcon](slug:api_icons_svgicon) to render.
     */
    svgIcon: SVGIcon;
    /**
     * Sets an additional class on the internal Icon component.
     */
    innerCssClass: string;
    /**
     * Sets a custom font icon class using the API of the consuming component.
     */
    customFontClass: string;
    /**
     * Sets the `IconSize` for the icon.
     */
    size: IconSize;
    get customClasses(): string;
    iconSettings: IconSettings;
    get hasSvgIcon(): boolean;
    get customFontIconClass(): string;
    private subs;
    constructor(iconsService: IconsService, element: ElementRef);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<IconWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<IconWrapperComponent, "kendo-icon-wrapper", ["kendoIconWrapper"], { "name": { "alias": "name"; "required": false; }; "svgIcon": { "alias": "svgIcon"; "required": false; }; "innerCssClass": { "alias": "innerCssClass"; "required": false; }; "customFontClass": { "alias": "customFontClass"; "required": false; }; "size": { "alias": "size"; "required": false; }; }, {}, never, never, true, never>;
}
