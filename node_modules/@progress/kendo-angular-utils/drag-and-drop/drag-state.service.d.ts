/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { OnDestroy } from '@angular/core';
import { DragTarget, DropTarget, DragAndDropState, DragAndDropAction } from '@progress/kendo-draggable-common';
import { DragTargetDirective } from './dragtarget.directive';
import { Coordinates } from './models/index';
import { ScrollDirection } from './models';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class DragStateService implements OnDestroy {
    constructor();
    dragTarget: DragTarget | null;
    dropTarget: DropTarget | null;
    dragTargets: DragTarget[];
    dropTargets: DropTarget[];
    pressed: boolean;
    ignoreMouse: boolean;
    autoScroll: boolean;
    isScrolling: boolean;
    scrollableParent: HTMLElement | null;
    autoScrollDirection: ScrollDirection;
    initialClientOffset: Coordinates;
    clientOffset: Coordinates;
    initialScrollOffset: Coordinates;
    scrollOffset: Coordinates;
    offset: Coordinates;
    pageOffset: Coordinates;
    velocity: Coordinates;
    dragTargetDirective: DragTargetDirective;
    state: DragAndDropState;
    dragIndex: number;
    dropIndex: number;
    dragData: any;
    dragTargetId: any;
    private callbacks;
    private scrollInterval;
    handleDragAndDrop(action: DragAndDropAction): void;
    setPressed(pressed: boolean): void;
    setScrolling(isScrolling: boolean): void;
    setVelocity(velocity: Coordinates): void;
    setOffset(offset: Coordinates): void;
    setClientOffset(clientOffset: Coordinates): void;
    setPageOffset(pageOffset: Coordinates): void;
    setInitialClientOffset(initialClientOffset: Coordinates): void;
    setScrollOffset(scrollOffset: Coordinates): void;
    setInitialScrollOffset(initialScrollOffset: Coordinates): void;
    get dragTargetPresent(): boolean;
    get dropTargetPresent(): boolean;
    private updateState;
    private setCallbacks;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DragStateService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DragStateService>;
}
