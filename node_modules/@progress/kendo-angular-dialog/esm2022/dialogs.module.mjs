/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgModule } from '@angular/core';
import { IconsService } from '@progress/kendo-angular-icons';
import { KENDO_DIALOGS } from './directives';
import { DialogService } from './dialog/dialog.service';
import { DialogContainerService } from './dialog/dialog-container.service';
import { WindowService } from './window/window.service';
import { WindowContainerService } from './window/window-container.service';
import * as i0 from "@angular/core";
import * as i1 from "./dialog/dialog.component";
import * as i2 from "./dialog/dialog-titlebar.component";
import * as i3 from "./dialog/dialog-container.directive";
import * as i4 from "./dialog/dialog-actions.component";
import * as i5 from "./localization/custom-messages.component";
import * as i6 from "./window/window.component";
import * as i7 from "./window/actions/window-close-action.directive";
import * as i8 from "./window/actions/window-minimize-action.directive";
import * as i9 from "./window/actions/window-maximize-action.directive";
import * as i10 from "./window/actions/window-restore-action.directive";
import * as i11 from "./window/window-titlebar.component";
import * as i12 from "./window/window-container.directive";
//IMPORTANT: NgModule export kept for backwards compatibility
/**
 * Represents the [NgModule](link:site.data.urls.angular['ngmoduleapi']) definition for the Dialogs components.
 *
 * Use the `DialogsModule` to include all Dialog and Window components and services in your application.
 *
 * @example
 * ```typescript
 * import { DialogsModule } from '@progress/kendo-angular-dialog';
 * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
 * import { NgModule } from '@angular/core';
 * import { AppComponent } from './app.component';
 *
 * @NgModule({
 *     declarations: [AppComponent],
 *     imports:      [BrowserModule, DialogsModule],
 *     bootstrap:    [AppComponent]
 * })
 * export class AppModule {}
 *
 * ```
 */
export class DialogsModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DialogsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: DialogsModule, imports: [i1.DialogComponent, i2.DialogTitleBarComponent, i3.DialogContainerDirective, i4.DialogActionsComponent, i5.CustomMessagesComponent, i6.WindowComponent, i7.WindowCloseActionDirective, i8.WindowMinimizeActionDirective, i9.WindowMaximizeActionDirective, i10.WindowRestoreActionDirective, i11.WindowTitleBarComponent, i12.WindowContainerDirective, i4.DialogActionsComponent, i5.CustomMessagesComponent], exports: [i1.DialogComponent, i2.DialogTitleBarComponent, i3.DialogContainerDirective, i4.DialogActionsComponent, i5.CustomMessagesComponent, i6.WindowComponent, i7.WindowCloseActionDirective, i8.WindowMinimizeActionDirective, i9.WindowMaximizeActionDirective, i10.WindowRestoreActionDirective, i11.WindowTitleBarComponent, i12.WindowContainerDirective, i4.DialogActionsComponent, i5.CustomMessagesComponent] });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DialogsModule, providers: [IconsService, DialogService, DialogContainerService, WindowService, WindowContainerService], imports: [i1.DialogComponent, i2.DialogTitleBarComponent, i4.DialogActionsComponent, i6.WindowComponent, i7.WindowCloseActionDirective, i8.WindowMinimizeActionDirective, i9.WindowMaximizeActionDirective, i10.WindowRestoreActionDirective, i4.DialogActionsComponent] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DialogsModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...KENDO_DIALOGS],
                    exports: [...KENDO_DIALOGS],
                    providers: [IconsService, DialogService, DialogContainerService, WindowService, WindowContainerService]
                }]
        }] });
