/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ComponentFactoryResolver } from '@angular/core';
import { WindowSettings } from './models/window-settings';
import { WindowContainerService } from '../window/window-container.service';
import { WindowRef } from './models/window-ref';
import * as i0 from "@angular/core";
/**
 * Provides methods for opening Windows dynamically.
 *
 * Use this service to open a Window component and manage its lifecycle. ([See example.]({% slug service_window %}))
 */
export declare class WindowService {
    /**
     * @hidden
     */
    private resolver;
    private containerService;
    constructor(
    /**
     * @hidden
     */
    resolver: ComponentFactoryResolver, containerService: WindowContainerService);
    /**
     * Opens a Window component with the specified settings.
     *
     * @param settings The settings that configure the Window.
     * @returns A `WindowRef` instance for controlling the Window.
     *
     * @example
     * ```ts
     * const window = windowService.open({
     *   title: 'My window',
     *   content: 'My content!'
     * });
     * ```
     */
    open(settings: WindowSettings): WindowRef;
    private applyOptions;
    private contentFrom;
    static ɵfac: i0.ɵɵFactoryDeclaration<WindowService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<WindowService>;
}
