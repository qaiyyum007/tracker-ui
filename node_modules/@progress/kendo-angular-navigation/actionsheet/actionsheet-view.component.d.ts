/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { AfterViewInit, ElementRef, NgZone, Renderer2 } from '@angular/core';
import { ActionSheetHeaderTemplateDirective, ActionSheetContentTemplateDirective, ActionSheetFooterTemplateDirective, ActionSheetTemplateDirective } from './models';
import { ActionSheetComponent } from './actionsheet.component';
import * as i0 from "@angular/core";
/**
 * @hidden
 *
 * Represents the [Kendo UI ActionSheetView component for Angular].
 * Used to display multiple views.
 */
export declare class ActionSheetViewComponent implements AfterViewInit {
    actionSheet: ActionSheetComponent;
    private renderer;
    private host;
    private zone;
    title: string;
    subtitle: string;
    titleId: string;
    hostClass: boolean;
    transitionDuration: string;
    transitionProperty: string;
    headerTemplate: ActionSheetHeaderTemplateDirective;
    contentTemplate: ActionSheetContentTemplateDirective;
    footerTemplate: ActionSheetFooterTemplateDirective;
    actionSheetTemplate: ActionSheetTemplateDirective;
    ngAfterViewInit(): void;
    constructor(actionSheet: ActionSheetComponent, renderer: Renderer2, host: ElementRef, zone: NgZone);
    get orientationClass(): string;
    get alignmentClass(): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<ActionSheetViewComponent, [{ optional: true; host: true; }, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ActionSheetViewComponent, "kendo-actionsheet-view", never, { "title": { "alias": "title"; "required": false; }; "subtitle": { "alias": "subtitle"; "required": false; }; "titleId": { "alias": "titleId"; "required": false; }; }, {}, ["headerTemplate", "contentTemplate", "footerTemplate", "actionSheetTemplate"], never, true, never>;
}
