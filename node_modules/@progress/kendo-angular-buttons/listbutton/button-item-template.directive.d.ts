/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Renders the list item content.
 *
 * To define the item template, nest a `<ng-template>` tag with the `kendo<ComponentName>ItemTemplate` directive inside the component tag.
 *
 * - Use the `kendoDropDownButtonItemTemplate` directive for the DropDownButton.
 * - Use the `kendoSplitButtonItemTemplate` directive for the SplitButton.
 *
 * The template context is set to the current component. Use the `let-dataItem` directive to reference the current data item.
 *
 * @example
 * ```html
 * <kendo-splitbutton [data]="listItems">
 *   <ng-template kendoSplitButtonItemTemplate let-dataItem>
 *     <span>{{dataItem}} option</span>
 *   </ng-template>
 * </kendo-splitbutton>
 * <kendo-dropdownbutton [data]="listItems">
 *   <ng-template kendoDropDownButtonItemTemplate let-dataItem>
 *     <span>{{dataItem}} option</span>
 *   </ng-template>
 * </kendo-dropdownbutton>
 * ```
 *
 * For more examples, refer to the article on the [DropDownButton templates](slug:itemstemplates_dropdownbutton).
 */
export declare class ButtonItemTemplateDirective {
    templateRef: TemplateRef<any>;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<ButtonItemTemplateDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ButtonItemTemplateDirective, "[kendoDropDownButtonItemTemplate],[kendoSplitButtonItemTemplate]", never, {}, {}, never, never, true, never>;
}
