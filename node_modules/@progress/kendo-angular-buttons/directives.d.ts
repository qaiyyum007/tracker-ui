/**-----------------------------------------------------------------------------------------
* Copyright Â© 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ButtonComponent } from './button/button.component';
import { ButtonGroupComponent } from './buttongroup/buttongroup.component';
import { ChipListComponent } from './chip/chip-list.component';
import { ChipComponent } from './chip/chip.component';
import { DropDownButtonComponent } from './dropdownbutton/dropdownbutton.component';
import { FloatingActionButtonComponent } from './floatingactionbutton/floatingactionbutton.component';
import { DialItemTemplateDirective } from './floatingactionbutton/templates/dial-item-template.directive';
import { FloatingActionButtonTemplateDirective } from './floatingactionbutton/templates/fab-template.directive';
import { SplitButtonCustomMessagesComponent } from './splitbutton/localization/custom-messages.component';
import { SplitButtonComponent } from './splitbutton/splitbutton.component';
import { ButtonItemTemplateDirective } from './listbutton/button-item-template.directive';
import { ToggleButtonTabStopDirective } from '@progress/kendo-angular-common';
/**
 * Use the `KENDO_BUTTON` utility array to add all Button-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_BUTTON],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_BUTTON: readonly [typeof ButtonComponent];
/**
 * Use the `KENDO_BUTTONGROUP` utility array to add all ButtonGroup-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_BUTTONGROUP],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_BUTTONGROUP: readonly [typeof ButtonComponent, typeof ButtonGroupComponent];
/**
 * Use the `KENDO_DROPDOWNBUTTON` utility array to add all DropDownButton-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_DROPDOWNBUTTON],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_DROPDOWNBUTTON: readonly [typeof DropDownButtonComponent, typeof ButtonItemTemplateDirective];
/**
 * Use the `KENDO_CHIP` utility array to add all Chip-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_CHIP],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_CHIP: readonly [typeof ChipComponent];
/**
 * Use the `KENDO_CHIPLIST` utility array to add all ChipList-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_CHIPLIST],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_CHIPLIST: readonly [typeof ChipComponent, typeof ChipListComponent];
/**
 * Use the `KENDO_FLOATINGACTIONBUTTON` utility array to add all FloatingActionButton-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_FLOATINGACTIONBUTTON],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_FLOATINGACTIONBUTTON: readonly [typeof FloatingActionButtonComponent, typeof DialItemTemplateDirective, typeof FloatingActionButtonTemplateDirective];
/**
 * Use the `KENDO_SPLITBUTTON` utility array to add all SplitButton-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_SPLITBUTTON],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_SPLITBUTTON: readonly [typeof SplitButtonComponent, typeof SplitButtonCustomMessagesComponent, typeof ToggleButtonTabStopDirective, typeof ButtonItemTemplateDirective];
/**
 * Use the `KENDO_BUTTONS` utility array to add all `@progress/kendo-angular-buttons`-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_BUTTONS],
 *   // ...
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_BUTTONS: readonly [typeof ButtonComponent, typeof ButtonComponent, typeof ButtonGroupComponent, typeof DropDownButtonComponent, typeof ButtonItemTemplateDirective, typeof ChipComponent, typeof ChipComponent, typeof ChipListComponent, typeof FloatingActionButtonComponent, typeof DialItemTemplateDirective, typeof FloatingActionButtonTemplateDirective, typeof SplitButtonComponent, typeof SplitButtonCustomMessagesComponent, typeof ToggleButtonTabStopDirective, typeof ButtonItemTemplateDirective];
