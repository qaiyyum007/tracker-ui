/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { QueryList, EventEmitter, OnDestroy, OnInit, Renderer2, AfterContentInit, AfterViewInit, ElementRef, NgZone } from '@angular/core';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { ChipComponent } from './chip.component';
import { ChipListSelection } from './models/selection';
import { ChipListRemoveEvent } from './chip-list-remove-event-args.interface';
import { ChipSize } from '../common/models';
import * as i0 from "@angular/core";
/**
 * Represents the Kendo UI ChipList component for Angular. Displays a list of Chip components.
 *
 * @example
 * ```html
 * <kendo-chiplist selection="multiple">
 *   <kendo-chip label="Chip 1"></kendo-chip>
 *   <kendo-chip label="Chip 2"></kendo-chip>
 * </kendo-chiplist>
 * ```
 * @remarks
 * Supported children components are: {@link ChipComponent}.
 */
export declare class ChipListComponent implements OnInit, AfterViewInit, AfterContentInit, OnDestroy {
    private localizationService;
    private renderer;
    private element;
    private ngZone;
    hostClass: boolean;
    orientation: string;
    /**
     * @hidden
     */
    direction: string;
    /**
     * Sets the selection mode of the ChipList.
     *
     * @default 'none'
     */
    selection: ChipListSelection;
    /**
     * Sets the gap between the Chips in the ChipList.
     * See [ChipList Appearance]({% slug appearance_chiplist %}#size).
     *
     * @default 'medium'
     */
    set size(size: ChipSize);
    get size(): ChipSize;
    /**
     * Fires when the ChipList selection changes.
     */
    selectedChange: EventEmitter<any[]>;
    /**
     * Fires when the user clicks the remove icon of a Chip in the ChipList.
     */
    remove: EventEmitter<ChipListRemoveEvent>;
    chips: QueryList<ChipComponent>;
    get single(): boolean;
    get multiple(): boolean;
    /**
     * @hidden
     */
    role: string;
    private dynamicRTLSubscription;
    private _size;
    private subs;
    private _navigable;
    /**
     * @hidden
     */
    onClick($event: any): void;
    /**
     * By default, keyboard navigation is available through arrow keys and roving tabindex.
     * When set to `false`, all chips are part of the default tabbing sequence of the page.
     *
     * @default true
     */
    set navigable(value: boolean);
    get navigable(): boolean;
    private currentActiveIndex;
    constructor(localizationService: LocalizationService, renderer: Renderer2, element: ElementRef, ngZone: NgZone);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    ngOnDestroy(): void;
    private selectedChips;
    /**
     * Updates the selection on click of a Chip. Emits events.
     */
    private setSelection;
    private clearSelection;
    private handleClasses;
    private attachElementEventHandlers;
    private keyDownHandler;
    private handleArrowKeys;
    private updateChips;
    private normalizeActiveIndex;
    private setChipSize;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChipListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChipListComponent, "kendo-chiplist, kendo-chip-list", never, { "selection": { "alias": "selection"; "required": false; }; "size": { "alias": "size"; "required": false; }; "role": { "alias": "role"; "required": false; }; "navigable": { "alias": "navigable"; "required": false; }; }, { "selectedChange": "selectedChange"; "remove": "remove"; }, ["chips"], ["*"], true, never>;
}
