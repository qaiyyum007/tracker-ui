/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Input, Optional, TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Specifies the adornments in the prefix container of the [Inputs](slug:adornments_textbox#toc-prefix-adornments) and [DropDowns](slug:adornments_multiselect#toc-prefix-adornments).
 * ```html
 *  <kendo-textbox>
 *      <ng-template kendoPrefixTemplate>
 *          <button kendoButton look="clear" icon="image"></button>
 *      </ng-template>
 *  </kendo-textbox>
 *
 *  <kendo-multiselect [data]="data" [(ngModel)]="value">
 *      <ng-template kendoPrefixTemplate>
 *          <button kendoButton look="clear" icon="image"></button>
 *      </ng-template>
 *  </kendo-multiselect>
 * ```
 */
export class PrefixTemplateDirective {
    templateRef;
    /**
     * Sets the `showSeparator` attribute of the `prefixTemplate`.
     *
     * @default false
     */
    set showSeparator(value) {
        this._showSeparator = value;
    }
    get showSeparator() {
        return this._showSeparator;
    }
    _showSeparator = false;
    constructor(templateRef) {
        this.templateRef = templateRef;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PrefixTemplateDirective, deps: [{ token: i0.TemplateRef, optional: true }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: PrefixTemplateDirective, isStandalone: true, selector: "[kendoPrefixTemplate]", inputs: { showSeparator: "showSeparator" }, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PrefixTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[kendoPrefixTemplate]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { showSeparator: [{
                type: Input
            }] } });
