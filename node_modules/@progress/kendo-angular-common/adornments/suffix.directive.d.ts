/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { TemplateRef } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * Represents the directive for suffix adornments in the Inputs and DropDowns components.
 *
 * Use the `kendoSuffixTemplate` directive to add custom content to the suffix container.
 *
 * * See [Inputs Suffix Adornments](slug:adornments_textbox#toc-suffix-adornments)
 * * See [DropDowns Suffix Adornments](slug:adornments_multiselect#toc-suffix-adornments)
 *
 * @example
 * ```html
 * <kendo-textbox>
 *   <ng-template kendoSuffixTemplate>
 *     <button kendoButton look="clear" icon="image"></button>
 *   </ng-template>
 * </kendo-textbox>
 * <kendo-multiselect [data]="data" [(ngModel)]="value">
 *   <ng-template kendoSuffixTemplate>
 *     <button kendoButton look="clear" icon="image"></button>
 *   </ng-template>
 * </kendo-multiselect>
 * ```
 */
export declare class SuffixTemplateDirective {
    templateRef: TemplateRef<any>;
    /**
     * Sets the `showSeparator` attribute of the `suffixTemplate`.
     *
     * @default false
     */
    set showSeparator(value: boolean);
    get showSeparator(): boolean;
    private _showSeparator;
    constructor(templateRef: TemplateRef<any>);
    static ɵfac: i0.ɵɵFactoryDeclaration<SuffixTemplateDirective, [{ optional: true; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SuffixTemplateDirective, "[kendoSuffixTemplate]", never, { "showSeparator": { "alias": "showSeparator"; "required": false; }; }, {}, never, never, true, never>;
}
