/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Input, Renderer2 } from '@angular/core';
import { TextBoxComponent } from '../textbox/textbox.component';
import * as i0 from "@angular/core";
import * as i1 from "../textbox/textbox.component";
/**
 * @hidden
 */
export class TextLabelDirective {
    textBox;
    renderer;
    focusableId;
    constructor(textBox, renderer) {
        this.textBox = textBox;
        this.renderer = renderer;
    }
    ngOnInit() {
        this.renderer.setAttribute(this.textBox.input.nativeElement, 'id', this.focusableId);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TextLabelDirective, deps: [{ token: i1.TextBoxComponent }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: TextLabelDirective, isStandalone: true, selector: "[kendoTextLabel]", inputs: { focusableId: "focusableId" }, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: TextLabelDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[kendoTextLabel]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.TextBoxComponent }, { type: i0.Renderer2 }]; }, propDecorators: { focusableId: [{
                type: Input
            }] } });
