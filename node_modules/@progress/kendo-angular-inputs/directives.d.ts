/**-----------------------------------------------------------------------------------------
* Copyright Â© 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { PrefixTemplateDirective, SuffixTemplateDirective, SeparatorComponent } from "@progress/kendo-angular-common";
import { CheckBoxComponent } from "./checkbox/checkbox.component";
import { CheckBoxDirective } from "./checkbox/checkbox.directive";
import { ColorGradientComponent } from "./colorpicker/color-gradient.component";
import { ColorPaletteComponent } from "./colorpicker/color-palette.component";
import { ColorPickerComponent } from "./colorpicker/colorpicker.component";
import { FlatColorPickerComponent } from "./colorpicker/flatcolorpicker.component";
import { ColorPickerCustomMessagesComponent } from "./colorpicker/localization/custom-messages.component";
import { ErrorComponent } from "./formfield/error.component";
import { FormFieldComponent } from "./formfield/formfield.component";
import { HintComponent } from "./formfield/hint.component";
import { MaskedTextBoxComponent } from "./maskedtextbox/maskedtextbox.component";
import { NumericTextBoxCustomMessagesComponent } from "./numerictextbox/localization/custom-messages.component";
import { NumericTextBoxComponent } from "./numerictextbox/numerictextbox.component";
import { RadioButtonComponent } from "./radiobutton/radiobutton.component";
import { RadioButtonDirective } from "./radiobutton/radiobutton.directive";
import { RangeSliderCustomMessagesComponent } from "./rangeslider/localization/custom-messages.component";
import { RangeSliderComponent } from "./rangeslider/rangeslider.component";
import { RatingHoveredItemTemplateDirective } from "./rating/directives/rating-hovered-item.directive";
import { RatingItemTemplateDirective } from "./rating/directives/rating-item.directive";
import { RatingSelectedItemTemplateDirective } from "./rating/directives/rating-selected-item.directive";
import { RatingComponent } from "./rating/rating.component";
import { InputSeparatorComponent } from "./shared/input-separator.component";
import { TextAreaDirective } from "./shared/textarea.directive";
import { SignatureCustomMessagesComponent } from "./signature/localization/custom-messages.component";
import { SignatureComponent } from "./signature/signature.component";
import { SliderCustomMessagesComponent } from "./slider/localization/custom-messages.component";
import { SliderComponent } from "./slider/slider.component";
import { LabelTemplateDirective } from "./sliders-common/label-template.directive";
import { SwitchCustomMessagesComponent } from "./switch/localization/custom-messages.component";
import { SwitchComponent } from "./switch/switch.component";
import { TextAreaPrefixComponent } from "./textarea/textarea-prefix.component";
import { TextAreaSuffixComponent } from "./textarea/textarea-suffix.component";
import { TextAreaComponent } from "./textarea/textarea.component";
import { TextBoxCustomMessagesComponent } from "./textbox/localization/custom-messages.component";
import { TextBoxPrefixTemplateDirective } from "./textbox/textbox-prefix.directive";
import { TextBoxSuffixTemplateDirective } from "./textbox/textbox-suffix.directive";
import { TextBoxComponent } from "./textbox/textbox.component";
import { TextBoxDirective } from "./textbox/textbox.directive";
import { OTPInputComponent } from "./otpinput/otpinput.component";
import { OTPInputCustomMessagesComponent } from "./otpinput/localization/custom-messages.component";
/**
 * Use the `KENDO_TEXTBOX` utility array to add all TextBox-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_TEXTBOX } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_TEXTBOX],
 *   template: `<kendo-textbox></kendo-textbox>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_TEXTBOX: readonly [typeof TextBoxDirective, typeof TextBoxComponent, typeof InputSeparatorComponent, typeof TextBoxSuffixTemplateDirective, typeof TextBoxPrefixTemplateDirective, typeof TextBoxCustomMessagesComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent];
/**
 * Use the `KENDO_NUMERICTEXTBOX` utility array to add all NumericTextBox-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_NUMERICTEXTBOX } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_NUMERICTEXTBOX],
 *   template: `<kendo-numerictextbox></kendo-numerictextbox>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_NUMERICTEXTBOX: readonly [typeof NumericTextBoxComponent, typeof NumericTextBoxCustomMessagesComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent];
/**
 * Use the `KENDO_MASKEDTEXTBOX` utility array to add all MaskedTextBox-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_MASKEDTEXTBOX } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_MASKEDTEXTBOX],
 *   template: `<kendo-maskedtextbox></kendo-maskedtextbox>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_MASKEDTEXTBOX: readonly [typeof MaskedTextBoxComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent];
/**
 * Use the `KENDO_OTPINPUT` utility array to add all OTPInput-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_OTPINPUT } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_OTPINPUT],
 *   template: `<kendo-otpinput></kendo-otpinput>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_OTPINPUT: readonly [typeof OTPInputComponent, typeof OTPInputCustomMessagesComponent];
/**
 * Use the `KENDO_TEXTAREA` utility array to add all TextArea-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_TEXTAREA } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_TEXTAREA],
 *   template: `<kendo-textarea></kendo-textarea>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_TEXTAREA: readonly [typeof TextAreaComponent, typeof TextAreaDirective, typeof TextAreaPrefixComponent, typeof TextAreaSuffixComponent, typeof SeparatorComponent];
/**
 * Use the `KENDO_CHECKBOX` utility array to add all CheckBox-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_CHECKBOX } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_CHECKBOX],
 *   template: `<kendo-checkbox></kendo-checkbox>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_CHECKBOX: readonly [typeof CheckBoxComponent, typeof CheckBoxDirective];
/**
 * Use the `KENDO_RADIOBUTTON` utility array to add all RadioButton-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_RADIOBUTTON } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_RADIOBUTTON],
 *   template: `<kendo-radiobutton></kendo-radiobutton>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_RADIOBUTTON: readonly [typeof RadioButtonComponent, typeof RadioButtonDirective];
/**
 * Use the `KENDO_SWITCH` utility array to add all Switch-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_SWITCH } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_SWITCH],
 *   template: `<kendo-switch></kendo-switch>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_SWITCH: readonly [typeof SwitchComponent, typeof SwitchCustomMessagesComponent];
/**
 * Use the `KENDO_FORMFIELD` utility array to add all FormField-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_FORMFIELD } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_FORMFIELD],
 *   template: `<kendo-formfield></kendo-formfield>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_FORMFIELD: readonly [typeof FormFieldComponent, typeof HintComponent, typeof ErrorComponent];
/**
 * Use the `KENDO_SLIDER` utility array to add all Slider-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_SLIDER } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_SLIDER],
 *   template: `<kendo-slider></kendo-slider>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_SLIDER: readonly [typeof SliderComponent, typeof SliderCustomMessagesComponent, typeof LabelTemplateDirective];
/**
 * Use the `KENDO_RANGESLIDER` utility array to add all RangeSlider-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_RANGESLIDER } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_RANGESLIDER],
 *   template: `<kendo-rangeslider></kendo-rangeslider>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_RANGESLIDER: readonly [typeof RangeSliderComponent, typeof RangeSliderCustomMessagesComponent, typeof LabelTemplateDirective];
/**
 * Use the `KENDO_RATING` utility array to add all Rating-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_RATING } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_RATING],
 *   template: `<kendo-rating></kendo-rating>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_RATING: readonly [typeof RatingComponent, typeof RatingItemTemplateDirective, typeof RatingHoveredItemTemplateDirective, typeof RatingSelectedItemTemplateDirective];
/**
 * Use the `KENDO_SIGNATURE` utility array to add all Signature-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_SIGNATURE } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_SIGNATURE],
 *   template: `<kendo-signature></kendo-signature>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_SIGNATURE: readonly [typeof SignatureComponent, typeof SignatureCustomMessagesComponent];
/**
 * Use the `KENDO_COLORPICKER` utility array to add all ColorPicker-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_COLORPICKER } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_COLORPICKER],
 *   template: `<kendo-colorpicker></kendo-colorpicker>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_COLORPICKER: readonly [typeof ColorPickerComponent, typeof ColorPickerCustomMessagesComponent];
/**
 * Use the `KENDO_FLATCOLORPICKER` utility array to add all FlatColorPicker-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_FLATCOLORPICKER } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_FLATCOLORPICKER],
 *   template: `<kendo-flatcolorpicker></kendo-flatcolorpicker>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_FLATCOLORPICKER: readonly [typeof FlatColorPickerComponent, typeof ColorPickerCustomMessagesComponent];
/**
 * Use the `KENDO_COLORPALETTE` utility array to add all ColorPalette-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_COLORPALETTE } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_COLORPALETTE],
 *   template: `<kendo-colorpalette></kendo-colorpalette>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_COLORPALETTE: readonly [typeof ColorPaletteComponent, typeof ColorPickerCustomMessagesComponent];
/**
 * Use the `KENDO_COLORGRADIENT` utility array to add all ColorGradient-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_COLORGRADIENT } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_COLORGRADIENT],
 *   template: `<kendo-colorgradient></kendo-colorgradient>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_COLORGRADIENT: readonly [typeof ColorGradientComponent, typeof ColorPickerCustomMessagesComponent];
/**
 * Use the `KENDO_INPUTS` utility array to add all `@progress/kendo-angular-inputs`-related components and directives to a standalone Angular component.
 *
 * @example
 * ```typescript
 * import { KENDO_INPUTS } from '@progress/kendo-angular-inputs';
 * @Component({
 *   standalone: true,
 *   imports: [KENDO_INPUTS],
 *   template: `<kendo-textbox></kendo-textbox>`
 * })
 * export class MyComponent {}
 * ```
 */
export declare const KENDO_INPUTS: readonly [typeof TextBoxDirective, typeof TextBoxComponent, typeof InputSeparatorComponent, typeof TextBoxSuffixTemplateDirective, typeof TextBoxPrefixTemplateDirective, typeof TextBoxCustomMessagesComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent, typeof NumericTextBoxComponent, typeof NumericTextBoxCustomMessagesComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent, typeof MaskedTextBoxComponent, typeof PrefixTemplateDirective, typeof SuffixTemplateDirective, typeof SeparatorComponent, typeof TextAreaComponent, typeof TextAreaDirective, typeof TextAreaPrefixComponent, typeof TextAreaSuffixComponent, typeof SeparatorComponent, typeof CheckBoxComponent, typeof CheckBoxDirective, typeof RadioButtonComponent, typeof RadioButtonDirective, typeof SwitchComponent, typeof SwitchCustomMessagesComponent, typeof FormFieldComponent, typeof HintComponent, typeof ErrorComponent, typeof SliderComponent, typeof SliderCustomMessagesComponent, typeof LabelTemplateDirective, typeof RangeSliderComponent, typeof RangeSliderCustomMessagesComponent, typeof LabelTemplateDirective, typeof RatingComponent, typeof RatingItemTemplateDirective, typeof RatingHoveredItemTemplateDirective, typeof RatingSelectedItemTemplateDirective, typeof SignatureComponent, typeof SignatureCustomMessagesComponent, typeof ColorPickerComponent, typeof ColorPickerCustomMessagesComponent, typeof FlatColorPickerComponent, typeof ColorPickerCustomMessagesComponent, typeof ColorGradientComponent, typeof ColorPickerCustomMessagesComponent, typeof ColorPaletteComponent, typeof ColorPickerCustomMessagesComponent, typeof OTPInputComponent, typeof OTPInputCustomMessagesComponent];
