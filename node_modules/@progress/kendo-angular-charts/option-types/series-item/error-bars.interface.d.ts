/**-----------------------------------------------------------------------------------------
* Copyright Â© 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { drawing } from '@progress/kendo-drawing';
import { ErrorBarLine, ErrorBarsValueArgs, ErrorBarsVisualArgs } from '../../common/property-types';
/**
 * Represents the configuration options of the series error bars.
 */
export interface SeriesErrorBars {
    /**
     * Specifies the color of the error bars. Accepts a valid CSS color string, including HEX and RGB.
     */
    color?: string;
    /**
     * If set to `false`, the caps of the error bars are not displayed. By default, the caps are visible.
     */
    endCaps?: boolean;
    /**
     * Specifies the error bars line options.
     */
    line?: ErrorBarLine;
    /**
     * Specifies the error bars value.
     * Supports the value option when [series.type]({% slug api_charts_series %}#toc-type) is set to `"bar"`, `"column"`, `"line"`, or `"area"`.
     *
     * Supports the following value types:
     *
     * - `"stderr"`&mdash;The standard error of the series values will be used to calculate the point low and
     * high values.
     * - `"stddev(n)"`&mdash;The standard deviation of the series values will be used to calculate the point low
     * and high values. Between the parentheses, a number can be specified that will be multiplied by the
     * calculated standard deviation.
     * - `"percentage(n)"`&mdash;A percentage of the point value.
     * - A number that will be subtracted or added to the point value.
     * - An array that holds the low and high difference from the point value.
     * - A function that returns the `errorBars` point value.
     */
    value?: string | number | [number, number] | ((e: ErrorBarsValueArgs) => [number, number]);
    /**
     * Specifies a function for creating custom visuals for the error bars.
     */
    visual?: (e: ErrorBarsVisualArgs) => drawing.Element;
    /**
     * Specifies the value of the [`xAxis`]({% slug api_charts_xaxis %}) error bars. For a list of the supported value
     * types, refer to the [`series.errorBars.value`]({% slug api_charts_serieserrorbars %}#toc-value) option.
     * Supports the `xValue` option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"scatter"`, `"scatterLine"`, or `"bubble"`.
     */
    xValue?: string;
    /**
     * Specifies the value of the [`yAxis`]({% slug api_charts_yaxis %}) error bars. For a list of supported value types, refer
     * to the [`series.errorBars.value`]({% slug api_charts_serieserrorbars %}#toc-value) option.
     * Supports the `yValue` option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"scatter"`, `"scatterLine"`, or `"bubble"`.
     */
    yValue?: string;
}
