/**-----------------------------------------------------------------------------------------
* Copyright Â© 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { drawing } from '@progress/kendo-drawing';
import { AxisLabelContentArgs, AxisLabelsPosition, AxisLabelVisualArgs, Border, DateFormats, LabelRotation } from '../../common/property-types';
import { Margin, Padding } from '../../common/property-types';
/**
 * Represents the configuration options of the category axis labels.
 */
export interface CategoryAxisLabels {
    /**
     * Specifies the background color of the labels. Accepts a valid CSS color string, including hex and rgb.
     */
    background?: string;
    /**
     * Specifies the border of the labels.
     */
    border?: Border;
    /**
     * Specifies the text color of the labels. Accepts a valid CSS color string, including hex and rgb.
     */
    color?: string;
    /**
     * Specifies the function which returns the label content.
     * You can split the text into multiple lines by using the line feed characters (`"\n"`).
     */
    content?: (e: AxisLabelContentArgs) => string;
    /**
     * Specifies the culture to use when formatting date values.
     * The specified culture must be loaded as demonstrated in the [Internationalization Overview]({% slug overview_intl %}).
     */
    culture?: string;
    /**
     * Specifies the format for displaying the labels of the date category axis.
     * The `{0}` placeholder represents the category value.
     * The Chart selects the appropriate format for the current [`categoryAxis.baseUnit`]({% slug api_charts_categoryaxis %}#toc-baseunit) option.
     * Setting the [`categoryAxis.labels.format`]({% slug api_charts_categoryaxislabels %}#toc-format) option overrides the date formats.
     * For more information, refer to the [`format`]({% slug api_intl_intlservice %}#toc-format) method of IntlService.
     *
     * For Radar Charts, the feature is not supported. Use [`categoryAxis.labels.format`]({% slug api_charts_categoryaxislabels %}#toc-format) instead.
     */
    dateFormats?: DateFormats;
    /**
     * Specifies the font style of the labels.
     */
    font?: string;
    /**
     * Specifies the format for displaying the labels. Uses the [`format`]({% slug api_intl_intlservice %}#toc-format) method of IntlService.
     * Contains one placeholder (`"{0}"`) which represents the category value.
     */
    format?: string;
    /**
     * Specifies the margin of the labels. A numeric value sets all margins.
     */
    margin?: Margin | number;
    /**
     * Determines whether the Chart mirrors the axis labels and ticks.
     * When set to `true`, labels that are normally on the left side of the axis render to the right.
     */
    mirror?: boolean;
    /**
     * Specifies the padding of the labels. A numeric value sets all paddings.
     */
    padding?: Padding | number;
    /**
     * Specifies the position of the axis labels. By default, labels are positioned next to the axis.
     * When `position` is set to `end`, the labels are placed at the end of the crossing axis, usually at the top or right end of the Chart unless the crossing axis has been reversed.
     * When the `position` property is set to `start`, the axis labels are positioned at the beginning of the crossing axis, typically located at the left or bottom end of the Chart, unless the crossing axis has been reversed.
     */
    position?: AxisLabelsPosition;
    /**
     * Specifies the rotation angle of the labels. By default, the labels are not rotated.
     * When the axis is horizontal, you can set this to `"auto"`.
     * In this case, the labels are rotated only if the slot size is not sufficient for the entire labels.
     */
    rotation?: LabelRotation | number | 'auto';
    /**
     * Specifies the number of labels to skip. By default, no labels are skipped.
     */
    skip?: number;
    /**
     * Specifies the rendering step of the label&mdash;renders every n<sup>th</sup> label. By default, every label is rendered.
     */
    step?: number;
    /**
     * Determines whether the Chart displays the category axis labels.
     * When set to `true`, the labels are visible. By default, the category axis labels are visible.
     */
    visible?: boolean;
    /**
     * Specifies a function for creating a custom visual for the labels.
     */
    visual?: (e: AxisLabelVisualArgs) => drawing.Element;
}
