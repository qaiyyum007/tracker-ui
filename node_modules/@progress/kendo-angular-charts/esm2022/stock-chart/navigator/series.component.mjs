/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, ChangeDetectionStrategy, QueryList, ContentChildren, ViewContainerRef } from '@angular/core';
import { ConfigurationService } from "../../common/configuration.service";
import { CollectionService } from "../../common/collection.service";
import { TooltipTemplateService } from "../../common/tooltip-template.service";
import { SeriesComponent } from '../../chart/series.component';
import { NavigatorSeriesItemComponent } from './series-item.component';
import * as i0 from "@angular/core";
import * as i1 from "../../common/configuration.service";
import * as i2 from "../../common/collection.service";
import * as i3 from "../../common/tooltip-template.service";
/**
 * Represents a collection of one or more navigator series items.
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 *  @Component({
 *   selector: 'my-app',
 *   template: `
 *     <kendo-stockchart>
 *         <kendo-chart-navigator>
 *             <kendo-chart-navigator-series>
 *                 <kendo-chart-navigator-series-item type="area" [data]="data" field="value" categoryField="date">
 *                 </kendo-chart-navigator-series-item>
 *             </kendo-chart-navigator-series>
 *         </kendo-chart-navigator>
 *     </kendo-stockchart>
 *   `
 * })
 * class AppComponent {
 *   public data: any[] = [];
 *
 *   constructor() {
 *      for (let idx = 0; idx < 100; idx++) {
 *          this.data.push({
 *              date: new Date(2017, 0, idx),
 *              value: Math.random() * 100
 *          });
 *      }
 *   }
 * }
 * ```
 *
 * @remarks
 * Supported children components are: {@link NavigatorSeriesItemComponent}.
 */
export class NavigatorSeriesComponent extends SeriesComponent {
    configurationService;
    collectionService;
    tooltipTemplateService;
    viewContainer;
    children;
    constructor(configurationService, collectionService, tooltipTemplateService, viewContainer) {
        super(configurationService, collectionService, tooltipTemplateService, viewContainer);
        this.configurationService = configurationService;
        this.collectionService = collectionService;
        this.tooltipTemplateService = tooltipTemplateService;
        this.viewContainer = viewContainer;
    }
    readTooltipTemplates() {
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: NavigatorSeriesComponent, deps: [{ token: i1.ConfigurationService }, { token: i2.CollectionService }, { token: i3.TooltipTemplateService }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: NavigatorSeriesComponent, isStandalone: true, selector: "kendo-chart-navigator-series", providers: [CollectionService], queries: [{ propertyName: "children", predicate: NavigatorSeriesItemComponent }], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: NavigatorSeriesComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [CollectionService],
                    selector: 'kendo-chart-navigator-series',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }, { type: i2.CollectionService }, { type: i3.TooltipTemplateService }, { type: i0.ViewContainerRef }]; }, propDecorators: { children: [{
                type: ContentChildren,
                args: [NavigatorSeriesItemComponent]
            }] } });
