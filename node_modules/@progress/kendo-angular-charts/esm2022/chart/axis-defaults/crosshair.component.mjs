/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { Input } from '@angular/core';
import { ConfigurationService } from '../../common/configuration.service';
import { SettingsComponent } from '../../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../../common/configuration.service";
/**
 * Represents the available configuration options of the Chart crosshair ([see example](slug:axes_chart_charts#toc-default-axis-configuration)).
 *
 * @remarks
 * Supported children components are: {@link AxisDefaultsCrosshairTooltipComponent}.
 */
export class AxisDefaultsCrosshairComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the color of the crosshair.
     */
    color;
    /**
     * Specifies the dash type of the crosshair.
     * @default 'solid'
     */
    dashType;
    /**
     * Sets the opacity of the crosshair. By default, the crosshair is opaque.
     * @default 1
     */
    opacity;
    /**
     * Determines whether the Chart displays the axis crosshair.
     * By default, the axis crosshair is not visible.
     * @default false
     */
    visible;
    /**
     * Defines the width of the crosshair in pixels.
     * @default 1
     */
    width;
    // These options are also available as child components.
    /**
     * Specifies the tooltip configuration of the crosshair.
     */
    tooltip;
    constructor(configurationService) {
        super('axisDefaults.crosshair', configurationService);
        this.configurationService = configurationService;
        this.markAsVisible();
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisDefaultsCrosshairComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: AxisDefaultsCrosshairComponent, isStandalone: true, selector: "kendo-chart-axis-defaults-crosshair", inputs: { color: "color", dashType: "dashType", opacity: "opacity", visible: "visible", width: "width", tooltip: "tooltip" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisDefaultsCrosshairComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-axis-defaults-crosshair',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { color: [{
                type: Input
            }], dashType: [{
                type: Input
            }], opacity: [{
                type: Input
            }], visible: [{
                type: Input
            }], width: [{
                type: Input
            }], tooltip: [{
                type: Input
            }] } });
