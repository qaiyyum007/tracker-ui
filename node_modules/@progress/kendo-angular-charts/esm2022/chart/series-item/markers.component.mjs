/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfigurationService } from '../../common/configuration.service';
import { SettingsComponent } from '../../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../../common/configuration.service";
/**
 * Represents the configuration of the Chart series marker.
 *
 * @example
 * ```html
 * <kendo-chart ...>
 *   <kendo-chart-series>
 *     <kendo-chart-series-item type="line"...>
 *       <kendo-chart-series-item-markers background="blue"> </kendo-chart-series-item-markers>
 *     </kendo-chart-series-item>
 *   </kendo-chart-series>
 * </kendo-chart>
 * ```
 */
export class SeriesMarkersComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the background color of the markers.
     */
    background;
    /**
     * Specifies the border configuration of the markers.
     */
    border;
    /**
     * Specifies the rotation angle of the markers.
     */
    rotation;
    /**
     * Specifies the marker size in pixels.
     * @default 6
     */
    size;
    /**
     * Specifies the shape of the series markers.
     * @default 'cirlce'
     */
    type;
    /**
     * Determines whether the Chart displays the series markers.
     * @default true
     */
    visible;
    /**
     * Specifies a function that creates a custom visual for the markers.
     */
    visual;
    /**
     * Specifies the `from` markers configuration.
     */
    from;
    /**
     * Specifies the `to` markers configuration.
     */
    to;
    constructor(configurationService) {
        super('markers', configurationService);
        this.configurationService = configurationService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesMarkersComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SeriesMarkersComponent, isStandalone: true, selector: "kendo-chart-series-item-markers", inputs: { background: "background", border: "border", rotation: "rotation", size: "size", type: "type", visible: "visible", visual: "visual", from: "from", to: "to" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesMarkersComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-series-item-markers',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { background: [{
                type: Input
            }], border: [{
                type: Input
            }], rotation: [{
                type: Input
            }], size: [{
                type: Input
            }], type: [{
                type: Input
            }], visible: [{
                type: Input
            }], visual: [{
                type: Input
            }], from: [{
                type: Input
            }], to: [{
                type: Input
            }] } });
