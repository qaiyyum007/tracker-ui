/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfigurationService } from '../../common/configuration.service';
import { SettingsComponent } from '../../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../../common/configuration.service";
/**
 * Represents the Chart series notes configuration
 * ([see example]({% slug notes_chart_charts %})).
 *
 * @example
 * ```html
 * <kendo-chart
 *   <kendo-chart-series>
 *     <kendo-chart-series-item type="line" [data]="[1, 2, 3]">
 *       <kendo-chart-series-item-notes [icon]="{type: 'square'}"> </kendo-chart-series-item-notes>
 *     </kendo-chart-series-item>
 *   </kendo-chart-series>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link SeriesNotesIconComponent} and {@link SeriesNotesLabelComponent}.
 */
export class SeriesNotesComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the line configuration for the notes.
     */
    line;
    /**
     * Specifies the position of the notes.
     */
    position;
    /**
     * Specifies a function that creates a custom visual for the notes.
     */
    visual;
    // These options are also available as child components
    /**
     * Specifies the icon configuration for the notes.
     */
    icon;
    /**
     * Specifies the label configuration for the notes.
     */
    label;
    constructor(configurationService) {
        super('notes', configurationService);
        this.configurationService = configurationService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesNotesComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SeriesNotesComponent, isStandalone: true, selector: "kendo-chart-series-item-notes", inputs: { line: "line", position: "position", visual: "visual", icon: "icon", label: "label" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesNotesComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-series-item-notes',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { line: [{
                type: Input
            }], position: [{
                type: Input
            }], visual: [{
                type: Input
            }], icon: [{
                type: Input
            }], label: [{
                type: Input
            }] } });
