/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfigurationService } from '../common/configuration.service';
import { SettingsComponent } from '../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../common/configuration.service";
/**
 * Represents the default options for all Chart series
 * ([see example]({% slug series_chart_charts %}#toc-default-series-configuration)).
 *
 * @example
 * ```html
 * <kendo-chart>
 *  <kendo-chart-series-defaults type="line">
 *   <kendo-chart-series-defaults-labels format="c"></kendo-chart-series-defaults-labels>
 *   <kendo-chart-series-defaults-notes position="above"></kendo-chart-series-defaults-notes>
 *   <kendo-chart-series-defaults-tooltip [visible]="true"></kendo-chart-series-defaults-tooltip>
 *  </kendo-chart-series-defaults>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link SeriesDefaultsLabelsComponent}, {@link SeriesDefaultsNotesComponent}, and {@link SeriesDefaultsTooltipComponent}.
 */
export class SeriesDefaultsComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the border configuration of the series.
     */
    border;
    /**
     * Specifies the distance between category clusters.
     * @default 1.5
     */
    gap;
    /**
     * Specifies the highlight configuration of the series.
     */
    highlight;
    /**
     * Specifies the overlay configuration of the series.
     */
    overlay;
    /**
     * Specifies the space between the Chart series as a proportion of the series width.
     * Use this option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"bar"`, `"column"`, `"candlestick"`, `"ohlc"`,
     * and `"waterfall"`.
     * @default 0.4
     */
    spacing;
    /**
     * Determines whether the series has to be stacked.
     * Use this option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"bar"`, `"column"`, `"line"`, `"area"`,
     * `"verticalLine"`, `"verticalArea"`, `"radarLine"`, `"radarArea"`, and `"radarColumn"`.
     * @default false
     */
    stack;
    /**
     * Specifies the type of the series.
     */
    type;
    /**
     * Specifies a function that returns a visual element for the series.
     */
    visual;
    // These options are also available as child components
    /**
     * Specifies the labels configuration of the series.
     */
    labels;
    /**
     * Specifies the notes configuration of the series.
     */
    notes;
    /**
     * Specifies the tooltip configuration of the series.
     */
    tooltip;
    /**
     * Specifies the focus highlight configuration of the series.
     */
    focusHighlight;
    constructor(configurationService) {
        super('seriesDefaults', configurationService);
        this.configurationService = configurationService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesDefaultsComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SeriesDefaultsComponent, isStandalone: true, selector: "kendo-chart-series-defaults", inputs: { border: "border", gap: "gap", highlight: "highlight", overlay: "overlay", spacing: "spacing", stack: "stack", type: "type", visual: "visual", labels: "labels", notes: "notes", tooltip: "tooltip", focusHighlight: "focusHighlight" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesDefaultsComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-series-defaults',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { border: [{
                type: Input
            }], gap: [{
                type: Input
            }], highlight: [{
                type: Input
            }], overlay: [{
                type: Input
            }], spacing: [{
                type: Input
            }], stack: [{
                type: Input
            }], type: [{
                type: Input
            }], visual: [{
                type: Input
            }], labels: [{
                type: Input
            }], notes: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], focusHighlight: [{
                type: Input
            }] } });
