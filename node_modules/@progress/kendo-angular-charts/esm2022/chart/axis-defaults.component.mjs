/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfigurationService } from '../common/configuration.service';
import { SettingsComponent } from '../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../common/configuration.service";
/**
 * Represents the default options for all Chart axes ([see example](slug:axes_chart_charts#toc-default-axis-configuration)).
 * Accepts the options which are supported by [`categoryAxis`](slug:api_charts_categoryaxisitemcomponent),
 * [`valueAxis`](slug:api_charts_valueaxisitemcomponent),
 * [`xAxis`](slug:api_charts_xaxisitemcomponent),
 * and [`yAxis`](slug:api_charts_yaxisitemcomponent).
 *
 * @example
 * ```html
 * <kendo-chart>
 *  <kendo-chart-axis-defaults>
 *   <kendo-chart-axis-defaults-crosshair [color]="'red'"></kendo-chart-axis-defaults-crosshair>
 *  <kendo-chart-axis-defaults-labels [color]="'blue'"></kendo-chart-axis-defaults-labels>
 *  <kendo-chart-axis-defaults-title text="My Axis Title"></kendo-chart-axis-defaults-title>
 * </kendo-chart-axis-defaults>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link AxisDefaultsCrosshairComponent}, {@link AxisDefaultsLabelsComponent}, and {@link AxisDefaultsTitleComponent}.
 */
export class AxisDefaultsComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the background color of the axis.
     */
    background;
    /**
     * Specifies the color of the axis.
     */
    color;
    /**
     * Specifies the line configuration of the axis.
     */
    line;
    /**
     * Specifies the major grid lines configuration of the axis.
     */
    majorGridLines;
    /**
     * Specifies the major ticks configuration of the axis.
     */
    majorTicks;
    /**
     * Specifies the minor grid lines configuration of the axis.
     */
    minorGridLines;
    /**
     * Specifies the minor ticks configuration of the axis.
     */
    minorTicks;
    /**
     * Determines whether the Chart prevents the axis range from snapping to zero.
     * Set it to `false` to force the axis range to snap to zero.
     * @default false
     */
    narrowRange;
    /**
     * Specifies the pane of the axis.
     */
    pane;
    /**
     * Specifies the plot bands configuration of the axis.
     */
    plotBands;
    /**
     * Determines whether the axis direction is reversed. Categories are listed from left to
     * right and from bottom to top by default.
     * @default false
     */
    reverse;
    /**
     * Specifies the angle (degrees) of the first category on the axis.
     * Use positive values to increase the angle clockwise with zero to the left. Negative values are acceptable.
     * @default 90
     */
    startAngle;
    /**
     * Determines whether the Chart displays the axis.
     * @default true
     */
    visible;
    // These options are also available as child components
    /**
     * Specifies the crosshair configuration of the axis.
     */
    crosshair;
    /**
     * Specifies the labels configuration of the axis.
     */
    labels;
    /**
     * Specifies the title configuration of the axis.
     */
    title;
    constructor(configurationService) {
        super('axisDefaults', configurationService);
        this.configurationService = configurationService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisDefaultsComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: AxisDefaultsComponent, isStandalone: true, selector: "kendo-chart-axis-defaults", inputs: { background: "background", color: "color", line: "line", majorGridLines: "majorGridLines", majorTicks: "majorTicks", minorGridLines: "minorGridLines", minorTicks: "minorTicks", narrowRange: "narrowRange", pane: "pane", plotBands: "plotBands", reverse: "reverse", startAngle: "startAngle", visible: "visible", crosshair: "crosshair", labels: "labels", title: "title" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisDefaultsComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-axis-defaults',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { background: [{
                type: Input
            }], color: [{
                type: Input
            }], line: [{
                type: Input
            }], majorGridLines: [{
                type: Input
            }], majorTicks: [{
                type: Input
            }], minorGridLines: [{
                type: Input
            }], minorTicks: [{
                type: Input
            }], narrowRange: [{
                type: Input
            }], pane: [{
                type: Input
            }], plotBands: [{
                type: Input
            }], reverse: [{
                type: Input
            }], startAngle: [{
                type: Input
            }], visible: [{
                type: Input
            }], crosshair: [{
                type: Input
            }], labels: [{
                type: Input
            }], title: [{
                type: Input
            }] } });
