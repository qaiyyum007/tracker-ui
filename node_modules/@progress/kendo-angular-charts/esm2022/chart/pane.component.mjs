/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CollectionItemComponent } from '../common/collection-item.component';
import { CollectionService } from '../common/collection.service';
import { ConfigurationService } from '../common/configuration.service';
import * as i0 from "@angular/core";
import * as i1 from "../common/configuration.service";
import * as i2 from "../common/collection.service";
/**
 * Represents the Kendo UI for Angular Chart Pane component.
 *
 * @example
 * ```html
 * <kendo-chart>
 *   <kendo-chart-panes>
 *     <kendo-chart-pane
 *         name="top"
 *         background="pink"
 *         [border]="{ color: 'black', dashType: 'dash', width: 2 }">
 *     </kendo-chart-pane>
 *   </kendo-chart-panes>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link PanesTitleComponent}.
 */
export class PaneComponent extends CollectionItemComponent {
    configurationService;
    collectionService;
    /**
     * Specifies the background color of the pane.
     */
    background;
    /**
     * Specifies the border configuration of the pane.
     */
    border;
    /**
     * Determines whether to clip the content of the pane to its boundaries.
     */
    clip;
    /**
     * Specifies the height of the pane in pixels.
     */
    height;
    /**
     * Specifies the margin of the pane. A numeric value sets all margins.
     * @default 0
     */
    margin;
    /**
     * Specifies the name of the pane.
     */
    name;
    /**
     * Specifies the padding of the pane. A numeric value sets all paddings.
     * @default 0
     */
    padding;
    /**
     * Specifies the title configuration of the pane.
     */
    title;
    constructor(configurationService, collectionService) {
        super(configurationService, collectionService);
        this.configurationService = configurationService;
        this.collectionService = collectionService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaneComponent, deps: [{ token: i1.ConfigurationService }, { token: i2.CollectionService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: PaneComponent, isStandalone: true, selector: "kendo-chart-pane, kendo-chart-panes-item", inputs: { background: "background", border: "border", clip: "clip", height: "height", margin: "margin", name: "name", padding: "padding", title: "title" }, providers: [ConfigurationService], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: PaneComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [ConfigurationService],
                    selector: 'kendo-chart-pane, kendo-chart-panes-item',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }, { type: i2.CollectionService }]; }, propDecorators: { background: [{
                type: Input
            }], border: [{
                type: Input
            }], clip: [{
                type: Input
            }], height: [{
                type: Input
            }], margin: [{
                type: Input
            }], name: [{
                type: Input
            }], padding: [{
                type: Input
            }], title: [{
                type: Input
            }] } });
