/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { ConfigurationService } from '../../common/configuration.service';
import { SettingsComponent } from '../../common/settings.component';
import * as i0 from "@angular/core";
import * as i1 from "../../common/configuration.service";
/**
 * Represents the value axis labels configuration.
 */
export class ValueAxisLabelsComponent extends SettingsComponent {
    configurationService;
    /**
     * Specifies the background color of the labels.
     */
    background;
    /**
     * Specifies the border configuration of the labels.
     */
    border;
    /**
     * Specifies the text color of the labels.
     */
    color;
    /**
     * Specifies a function that creates the content of the label.
     */
    content;
    /**
     * The font style of the labels.
     * @default '12px sans-serif'
     */
    font;
    /**
     * The format for displaying the labels. Uses the [`format`]({% slug api_intl_intlservice %}#toc-format) method of IntlService.
     * Contains one placeholder (`"{0}"`) which represents the category value.
     * @default '{0}'
     */
    format;
    /**
     * The margin of the labels. A numeric value sets all margins.
     * @default 0
     */
    margin;
    mirror;
    /**
     * The padding of the labels. A numeric value sets all paddings.
     * @default 0
     */
    padding;
    /**
     * The position of the axis labels. By default, labels are positioned next to the axis.
     * When `position` is set to `end`, the labels are placed at the end of the crossing axis, usually at the top or right end of the Chart unless the crossing axis has been reversed.
     * Alternatively, when the `position` property is set to `start`, the axis labels will be positioned at the beginning of the crossing axis, typically located at the left or bottom end of the Chart, unless the crossing axis has been reversed.
     * @default 'onAxis'
     */
    position;
    /**
     * The rotation angle (in degrees) of the labels. By default, the labels are not rotated. Angles
     * increase clockwise and zero is to the left. Negative values are acceptable. Can be set to `"auto"` if
     * the axis is horizontal. In this case, the labels will be rotated only if the slot size is not
     * sufficient for the entire labels.
     * @default 0
     */
    rotation;
    /**
     * The number of labels to skip. By default, no labels are skipped.
     * @default 0
     */
    skip;
    /**
     * The label rendering step.
     * Every n<sup>th</sup> label is rendered where `n` is the step.
     * @default 1
     */
    step;
    /**
     * If set to `true`, the Chart displays the value axis labels.
     * @default true
     */
    visible;
    visual;
    constructor(configurationService) {
        super('labels', configurationService);
        this.configurationService = configurationService;
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ValueAxisLabelsComponent, deps: [{ token: i1.ConfigurationService }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: ValueAxisLabelsComponent, isStandalone: true, selector: "kendo-chart-value-axis-item-labels", inputs: { background: "background", border: "border", color: "color", content: "content", font: "font", format: "format", margin: "margin", mirror: "mirror", padding: "padding", position: "position", rotation: "rotation", skip: "skip", step: "step", visible: "visible", visual: "visual" }, usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ValueAxisLabelsComponent, decorators: [{
            type: Component,
            args: [{
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    selector: 'kendo-chart-value-axis-item-labels',
                    template: '',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.ConfigurationService }]; }, propDecorators: { background: [{
                type: Input
            }], border: [{
                type: Input
            }], color: [{
                type: Input
            }], content: [{
                type: Input
            }], font: [{
                type: Input
            }], format: [{
                type: Input
            }], margin: [{
                type: Input
            }], mirror: [{
                type: Input
            }], padding: [{
                type: Input
            }], position: [{
                type: Input
            }], rotation: [{
                type: Input
            }], skip: [{
                type: Input
            }], step: [{
                type: Input
            }], visible: [{
                type: Input
            }], visual: [{
                type: Input
            }] } });
