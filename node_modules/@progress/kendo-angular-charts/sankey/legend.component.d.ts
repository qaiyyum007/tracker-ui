/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ConfigurationService } from '../common/configuration.service';
import { Border, LegendLabels, LegendMarkers, LegendTitle, Margin, Padding } from '../common/property-types';
import { SettingsComponent } from '../common/settings.component';
import { SankeyLegend } from './api-types';
import * as i0 from "@angular/core";
/**
 * Represents the configuration options of the Sankey legend
 * ([see example]({% slug legend_sankey %})).
 */
export declare class SankeyLegendComponent extends SettingsComponent implements SankeyLegend {
    configurationService: ConfigurationService;
    /**
     * Aligns the legend horizontally when [`legend.position`]({% slug api_charts_sankeylegend %}#toc-position) is set to `"top"` or `"bottom"`.
     * Aligns the legend vertically when [`legend.position`]({% slug api_charts_sankeylegend %}#toc-position) is set to `"left"` or `"right"`.
     * @default 'center'
     */
    align: 'start' | 'center' | 'end';
    /**
     * Sets the background color of the legend. Accepts a valid CSS color string, including hex and rgb.
     * @default 'white'
     */
    background: string;
    border: Border;
    height: number;
    labels: LegendLabels;
    /**
     * Sets the margin of the Sankey legend. A numeric value sets all paddings.
     * @default 5
     */
    margin: Margin | number;
    /**
     * Sets the X offset of the Sankey legend. The offset is relative to the default position of the legend.
     * For example, a value of `20` moves the legend 20 pixels to the right of its initial position.
     * Negative values move the legend to the left of its current position.
     * @default 0
     */
    offsetX: number;
    /**
     * Sets the Y offset of the Sankey legend. The offset is relative to the current position of the legend.
     * For example, a value of `20` moves the legend 20 pixels down from its initial position.
     * Negative values move the legend upwards from its current position.
     * @default 0
     */
    offsetY: number;
    /**
     * Sets the orientation of the legend items.
     * @default 'vertical'
     */
    orientation: 'vertical' | 'horizontal';
    /**
     * Sets the padding of the Sankey legend. A numeric value sets all paddings.
     * @default 5
     */
    padding: Padding | number;
    /**
     * Sets the position of the Sankey legend.
     * Setting the legend position to `custom` allows you to position the legend using the [`legend.offsetX`](slug:api_charts_sankeylegend#toc-offsetx) and [`legend.offsetY`](slug:api_charts_sankeylegend#toc-offsety) options.
     * @default 'right'
     */
    position: 'top' | 'bottom' | 'left' | 'right' | 'custom';
    /**
     * Determines if the legend items are reversed.
     * @default false
     */
    reverse: boolean;
    /**
     * Determines if the Sankey displays the legend. By default, the Sankey legend is visible.
     * @default true
     */
    visible: boolean;
    width: number;
    markers: LegendMarkers;
    spacing: number;
    title: LegendTitle;
    constructor(configurationService: ConfigurationService);
    static ɵfac: i0.ɵɵFactoryDeclaration<SankeyLegendComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SankeyLegendComponent, "kendo-sankey-legend", never, { "align": { "alias": "align"; "required": false; }; "background": { "alias": "background"; "required": false; }; "border": { "alias": "border"; "required": false; }; "height": { "alias": "height"; "required": false; }; "labels": { "alias": "labels"; "required": false; }; "margin": { "alias": "margin"; "required": false; }; "offsetX": { "alias": "offsetX"; "required": false; }; "offsetY": { "alias": "offsetY"; "required": false; }; "orientation": { "alias": "orientation"; "required": false; }; "padding": { "alias": "padding"; "required": false; }; "position": { "alias": "position"; "required": false; }; "reverse": { "alias": "reverse"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "width": { "alias": "width"; "required": false; }; "markers": { "alias": "markers"; "required": false; }; "spacing": { "alias": "spacing"; "required": false; }; "title": { "alias": "title"; "required": false; }; }, {}, never, never, true, never>;
}
