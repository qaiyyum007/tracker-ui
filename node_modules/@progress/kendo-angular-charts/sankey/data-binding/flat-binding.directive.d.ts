/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, OnChanges, SimpleChanges } from "@angular/core";
import { SankeyComponent } from "../../sankey.component";
import { SankeyFlatBindingDataBoundEvent } from "./flat-binding.event";
import * as i0 from "@angular/core";
/**
 * Represents a directive that encapsulates the retrieval of the nodes and links when flat data is provided.
 *
 * See [Data Binding - Binding to Flat Data]({% slug data_binding_sankey %}#toc-binding-to-flat-data).
 */
export declare class SankeyFlatBindingDirective implements OnChanges {
    private sankey;
    /**
     * Specifies the data that the Sankey diagram displays.
     */
    data: any[];
    /**
     * Sets the fields that identify the nodes.
     */
    dimensionFields: string[];
    /**
     * Sets the unique field that represents the link value between nodes.
     */
    valueField: string;
    /**
     * Fires when the flat data has been converted to `SankeyData`.
     *
     * Modify the data to customize the created nodes and links.
     */
    dataBound: EventEmitter<SankeyFlatBindingDataBoundEvent>;
    constructor(sankey: SankeyComponent);
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SankeyFlatBindingDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<SankeyFlatBindingDirective, "[kendoSankeyFlatBinding]", never, { "data": { "alias": "kendoSankeyFlatBinding"; "required": false; }; "dimensionFields": { "alias": "dimensionFields"; "required": false; }; "valueField": { "alias": "valueField"; "required": false; }; }, { "dataBound": "dataBound"; }, never, never, true, never>;
}
