/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgZone, ElementRef, ChangeDetectorRef, Renderer2, EventEmitter } from '@angular/core';
import { ConfigurationService } from './common/configuration.service';
import { InstanceEventService } from './events/instance-event.service';
import { ChartInstanceObserver } from './common/chart-instance-observer';
import { ChartComponent } from './chart.component';
import { ThemeService } from './common/theme.service';
import { IntlService } from '@progress/kendo-angular-intl';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { DrilldownEvent } from './events/drilldown-event';
import * as i0 from "@angular/core";
/**
 * Represents the Kendo UI for Angular Sparkline component.
 *
 * The Sparkline displays data in a small chart format, typically showing trends and patterns.
 * It provides a compact way to visualize data without detailed axes or legends.
 *
 * @example
 * ```ts
 * import { Component } from '@angular/core';
 *
 * @Component({
 *   selector: 'my-app',
 *   template: `
 *       <kendo-sparkline [data]="[936, 968, 1025, 999]" type="column">
 *       </kendo-sparkline>
 *   `,
 * })
 * export class AppComponent {
 * }
 * ```
 */
export declare class SparklineComponent extends ChartComponent {
    configurationService: ConfigurationService;
    themeService: ThemeService;
    protected element: ElementRef;
    protected intl: IntlService;
    protected localizationService: LocalizationService;
    protected ngZone: NgZone;
    protected instanceEventService: InstanceEventService;
    protected changeDetector: ChangeDetectorRef;
    protected renderer: Renderer2;
    /**
     * Specifies the default series type for the Sparkline.
     *
     * @default "line"
     */
    type: string;
    /**
     * Specifies the data for the default Sparkline series.
     *
     * The component discards this property if you supply series data.
     */
    data: any[];
    /**
     * @hidden
     */
    drilldown: EventEmitter<DrilldownEvent>;
    /**
     * @hidden
     */
    drilldownLevelChange: EventEmitter<number>;
    /**
     * @hidden
     */
    noData: boolean;
    /**
     * @hidden
     */
    get drilldownLevel(): number;
    /**
     * @hidden
     */
    tooltipWrapperClass: string;
    /**
     * @hidden
     */
    tooltipContentClasses: any;
    /**
     * @hidden
     */
    showLicenseWatermark: boolean;
    protected hostClasses: string[];
    constructor(configurationService: ConfigurationService, themeService: ThemeService, element: ElementRef, intl: IntlService, localizationService: LocalizationService, ngZone: NgZone, instanceEventService: InstanceEventService, changeDetector: ChangeDetectorRef, renderer: Renderer2);
    protected createInstance(element: any, observer: ChartInstanceObserver): void;
    protected updateOptions(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<SparklineComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SparklineComponent, "kendo-sparkline", ["kendoSparkline"], { "type": { "alias": "type"; "required": false; }; "data": { "alias": "data"; "required": false; }; "noData": { "alias": "noData"; "required": false; }; "drilldownLevel": { "alias": "drilldownLevel"; "required": false; }; }, { "drilldown": "drilldown"; "drilldownLevelChange": "drilldownLevelChange"; }, never, never, true, never>;
}
