/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ConfigurationService } from '../common/configuration.service';
import { drawing } from '@progress/kendo-drawing';
import { SettingsComponent } from '../common/settings.component';
import { Border, FocusHighlight, Overlay, SeriesHighlight, SeriesStack, SeriesType, SeriesVisualArgs } from '../common/property-types';
import { SeriesDefaultsLabels, SeriesDefaultsNotes, SeriesDefaultsTooltip, SeriesDefaults } from '../common/property-types';
import * as i0 from "@angular/core";
/**
 * Represents the default options for all Chart series
 * ([see example]({% slug series_chart_charts %}#toc-default-series-configuration)).
 *
 * @example
 * ```html
 * <kendo-chart>
 *  <kendo-chart-series-defaults type="line">
 *   <kendo-chart-series-defaults-labels format="c"></kendo-chart-series-defaults-labels>
 *   <kendo-chart-series-defaults-notes position="above"></kendo-chart-series-defaults-notes>
 *   <kendo-chart-series-defaults-tooltip [visible]="true"></kendo-chart-series-defaults-tooltip>
 *  </kendo-chart-series-defaults>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link SeriesDefaultsLabelsComponent}, {@link SeriesDefaultsNotesComponent}, and {@link SeriesDefaultsTooltipComponent}.
 */
export declare class SeriesDefaultsComponent extends SettingsComponent implements SeriesDefaults {
    configurationService: ConfigurationService;
    /**
     * Specifies the border configuration of the series.
     */
    border: Border;
    /**
     * Specifies the distance between category clusters.
     * @default 1.5
     */
    gap: number;
    /**
     * Specifies the highlight configuration of the series.
     */
    highlight: SeriesHighlight;
    /**
     * Specifies the overlay configuration of the series.
     */
    overlay: Overlay;
    /**
     * Specifies the space between the Chart series as a proportion of the series width.
     * Use this option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"bar"`, `"column"`, `"candlestick"`, `"ohlc"`,
     * and `"waterfall"`.
     * @default 0.4
     */
    spacing: number;
    /**
     * Determines whether the series has to be stacked.
     * Use this option when [`series.type`]({% slug api_charts_series %}#toc-type) is set to `"bar"`, `"column"`, `"line"`, `"area"`,
     * `"verticalLine"`, `"verticalArea"`, `"radarLine"`, `"radarArea"`, and `"radarColumn"`.
     * @default false
     */
    stack: boolean | string | SeriesStack;
    /**
     * Specifies the type of the series.
     */
    type: SeriesType;
    /**
     * Specifies a function that returns a visual element for the series.
     */
    visual: (e: SeriesVisualArgs) => drawing.Element;
    /**
     * Specifies the labels configuration of the series.
     */
    labels: SeriesDefaultsLabels;
    /**
     * Specifies the notes configuration of the series.
     */
    notes: SeriesDefaultsNotes;
    /**
     * Specifies the tooltip configuration of the series.
     */
    tooltip: SeriesDefaultsTooltip;
    /**
     * Specifies the focus highlight configuration of the series.
     */
    focusHighlight?: FocusHighlight;
    constructor(configurationService: ConfigurationService);
    static ɵfac: i0.ɵɵFactoryDeclaration<SeriesDefaultsComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SeriesDefaultsComponent, "kendo-chart-series-defaults", never, { "border": { "alias": "border"; "required": false; }; "gap": { "alias": "gap"; "required": false; }; "highlight": { "alias": "highlight"; "required": false; }; "overlay": { "alias": "overlay"; "required": false; }; "spacing": { "alias": "spacing"; "required": false; }; "stack": { "alias": "stack"; "required": false; }; "type": { "alias": "type"; "required": false; }; "visual": { "alias": "visual"; "required": false; }; "labels": { "alias": "labels"; "required": false; }; "notes": { "alias": "notes"; "required": false; }; "tooltip": { "alias": "tooltip"; "required": false; }; "focusHighlight": { "alias": "focusHighlight"; "required": false; }; }, {}, never, never, true, never>;
}
