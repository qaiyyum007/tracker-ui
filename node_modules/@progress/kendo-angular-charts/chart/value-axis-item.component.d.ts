/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { CollectionItemComponent } from '../common/collection-item.component';
import { CollectionService } from '../common/collection.service';
import { ConfigurationService } from '../common/configuration.service';
import { AxisLine, AxisTicks, GridLines, PlotBand } from '../common/property-types';
import { ValueAxis, ValueAxisCrosshair, ValueAxisLabels, ValueAxisNotes, ValueAxisTitle } from '../common/property-types';
import * as i0 from "@angular/core";
/**
 * Represents the Kendo UI for Angular Chart Value Axis Item component.
 *
 * @example
 * ```html
 * <kendo-chart>
 *  <kendo-chart-value-axis>
 *   <kendo-chart-value-axis-item>
 *     <kendo-chart-value-axis-item-title text="Value Axis Title"></kendo-chart-value-axis-item-title>
 *   </kendo-chart-value-axis-item>
 *  </kendo-chart-value-axis>
 * </kendo-chart>
 * ```
 *
 * @remarks
 * Supported children components are: {@link ValueAxisCrosshairComponent}, {@link ValueAxisLabelsComponent}, {@link ValueAxisNotesComponent}, and {@link ValueAxisTitleComponent}.
 */
export declare class ValueAxisItemComponent extends CollectionItemComponent implements ValueAxis {
    protected configurationService: ConfigurationService;
    protected collectionService: CollectionService;
    /**
     * Specifies the value or array of values at which the axis crosses with another axis.
     */
    axisCrossingValue: any | any[];
    /**
     * Specifies the background color of the axis.
     */
    background: string;
    /**
     * Specifies the color of the axis.
     */
    color: string;
    /**
     * Specifies the configuration of the axis line.
     */
    line: AxisLine;
    /**
     * Specifies the configuration of the major grid lines.
     */
    majorGridLines: GridLines;
    /**
     * Specifies the configuration of the major ticks.
     */
    majorTicks: AxisTicks;
    /**
     * Specifies the interval between major divisions.
     */
    majorUnit: number;
    /**
     * Specifies the maximum value of the axis.
     * @default 1
     */
    max: any;
    /**
     * Specifies the minimum value of the axis.
     * @default 0
     */
    min: any;
    /**
     * Specifies the configuration of the minor grid lines.
     */
    minorGridLines: GridLines;
    /**
     * Specifies the configuration of the minor ticks.
     */
    minorTicks: AxisTicks;
    /**
     * Specifies the interval between minor divisions.
     */
    minorUnit: number;
    /**
     * Specifies the unique axis name. Use this name to associate a series with a value axis by using the [`series.axis`]({% slug api_charts_series %}#toc-axis) option.
     * @default 'primary'
     */
    name: string;
    /**
     * Determines whether the Chart prevents the automatic axis range from snapping to zero.
     * Set to `false` to force the automatic axis range to snap to zero.
     * @default true
     */
    narrowRange: boolean;
    /**
     * Specifies the name of the pane that the axis renders in.
     */
    pane: string;
    /**
     * Specifies the plot bands configuration.
     */
    plotBands: PlotBand[];
    /**
     * Determines whether the value axis direction is reversed.
     * By default, the categories are listed from left to right and from bottom to top.
     *
     * Radar and Polar Charts do not support reverse value axes.
     * @default false
     */
    reverse: boolean;
    /**
     * Specifies the axis type.
     *
     * The `numeric` value refers to a numeric axis, while `log` represents a logarithmic axis.
     * @default 'numeric'
     *
     */
    type: 'numeric' | 'log';
    /**
     * Determines whether the Chart displays the value axis. By default, the value axis is visible.
     * @default true
     */
    visible: boolean;
    /**
     * Specifies the configuration of the crosshair.
     */
    crosshair: ValueAxisCrosshair;
    /**
     * Specifies the configuration of the labels.
     */
    labels: ValueAxisLabels;
    /**
     * Specifies the configuration of the notes.
     */
    notes: ValueAxisNotes;
    /**
     * Specifies the configuration of the title.
     */
    title: ValueAxisTitle;
    constructor(configurationService: ConfigurationService, collectionService: CollectionService);
    static ɵfac: i0.ɵɵFactoryDeclaration<ValueAxisItemComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ValueAxisItemComponent, "kendo-chart-value-axis-item", never, { "axisCrossingValue": { "alias": "axisCrossingValue"; "required": false; }; "background": { "alias": "background"; "required": false; }; "color": { "alias": "color"; "required": false; }; "line": { "alias": "line"; "required": false; }; "majorGridLines": { "alias": "majorGridLines"; "required": false; }; "majorTicks": { "alias": "majorTicks"; "required": false; }; "majorUnit": { "alias": "majorUnit"; "required": false; }; "max": { "alias": "max"; "required": false; }; "min": { "alias": "min"; "required": false; }; "minorGridLines": { "alias": "minorGridLines"; "required": false; }; "minorTicks": { "alias": "minorTicks"; "required": false; }; "minorUnit": { "alias": "minorUnit"; "required": false; }; "name": { "alias": "name"; "required": false; }; "narrowRange": { "alias": "narrowRange"; "required": false; }; "pane": { "alias": "pane"; "required": false; }; "plotBands": { "alias": "plotBands"; "required": false; }; "reverse": { "alias": "reverse"; "required": false; }; "type": { "alias": "type"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "crosshair": { "alias": "crosshair"; "required": false; }; "labels": { "alias": "labels"; "required": false; }; "notes": { "alias": "notes"; "required": false; }; "title": { "alias": "title"; "required": false; }; }, {}, never, never, true, never>;
}
