/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ColumnCellTemplateDirective } from './column-cell-template.directive';
import { ColumnHeaderTemplateDirective } from './column-header-template.directive';
import * as i0 from "@angular/core";
/**
 * Represents the column definition for the MultiColumnComboBox component.
 *
 * Use this component to define columns inside the MultiColumnComboBox.
 * [See example]({% slug columns_multicolumncombobox %}).
 *
 * @example
 * ```html
 * <kendo-multicolumncombobox ...>
 *   <kendo-combobox-column field="name" title="Name" width="200"></kendo-combobox-column>
 * <kendo-multicolumncombobox ...>
 * ```
 */
export declare class ComboBoxColumnComponent {
    /**
     * @hidden
     */
    cellTemplate: ColumnCellTemplateDirective;
    /**
     * @hidden
     */
    headerTemplate: ColumnHeaderTemplateDirective;
    /**
     * Sets the field to which the column is bound.
     *
     * > The `field` property can be set to point to a nested property value - e.g. `category.name`.
     */
    field: string;
    /**
     * Sets the title of the column.
     */
    title: string;
    /**
     * Sets the width of the column (in pixels).
     */
    width: number;
    /**
     * Controls the visibility of the column. When `true`, hides the column from view.
     * @default false
     */
    hidden: boolean;
    /**
     * Sets custom styles for the table cells of the column (except for the header cells).
     *
     * The `style` property uses the NgStyle directive to apply styles.
     */
    style: {
        [key: string]: string;
    };
    /**
     * Sets custom styles for the header cell of the column.
     *
     * The `headerStyle` property uses the NgStyle directive to apply styles.
     */
    headerStyle: {
        [key: string]: string;
    };
    /**
     * Sets custom CSS classes for the column cells.
     *
     * The `class` property uses the NgClass directive to apply classes.
     */
    class: string | string[] | Set<string> | {
        [key: string]: any;
    };
    /**
     * Sets custom CSS classes for the column header cell.
     *
     * The `headerClass` property uses the NgClass directive to apply classes.
     */
    headerClass: string | string[] | Set<string> | {
        [key: string]: any;
    };
    /**
     * Sets the condition that needs to be satisfied for a column to remain visible. If you set the [`hidden`]({% slug api_dropdowns_comboboxcolumncomponent %}#toc-hidden) property, the behavior of media is overridden.
     */
    media: string;
    /**
     * @hidden
     */
    matchesMedia: boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ComboBoxColumnComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ComboBoxColumnComponent, "kendo-combobox-column", never, { "field": { "alias": "field"; "required": false; }; "title": { "alias": "title"; "required": false; }; "width": { "alias": "width"; "required": false; }; "hidden": { "alias": "hidden"; "required": false; }; "style": { "alias": "style"; "required": false; }; "headerStyle": { "alias": "headerStyle"; "required": false; }; "class": { "alias": "class"; "required": false; }; "headerClass": { "alias": "headerClass"; "required": false; }; "media": { "alias": "media"; "required": false; }; }, {}, ["cellTemplate", "headerTemplate"], never, true, never>;
}
