/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { EventEmitter, Renderer2, ElementRef } from '@angular/core';
import { TagTemplateDirective } from '../common/templates/tag-template.directive';
import { GroupTagTemplateDirective } from '../common/templates/group-tag-template.directive';
import { DropDownSize } from './models/size';
import { DropDownRounded } from './models/rounded';
import { DropDownFillMode } from './models/fillmode';
import { SVGIcon } from '@progress/kendo-svg-icons';
import * as i0 from "@angular/core";
/**
 * @hidden
 */
export declare class TagListComponent {
    private renderer;
    hostElement: ElementRef<HTMLElement>;
    /**
     * @hidden
     */
    xCircleIcon: SVGIcon;
    tags: any[];
    textField: string | string[];
    valueField: string | string[];
    valueDepth: number[];
    focused: number;
    template: TagTemplateDirective;
    groupTemplate: GroupTagTemplateDirective;
    disabled: boolean;
    tagPrefix: string;
    id: string;
    set size(size: DropDownSize);
    get size(): DropDownSize;
    rounded: DropDownRounded;
    fillMode: DropDownFillMode;
    /**
     * A collection with the disabled tags' indices.
     */
    disabledIndices: Set<number>;
    removeTag: EventEmitter<any>;
    hostClass: boolean;
    get hostId(): string;
    taglistRole: string;
    multiselectable: boolean;
    private _size;
    constructor(renderer: Renderer2, hostElement: ElementRef<HTMLElement>);
    tagProp(tag: any, prop: string | string[], index: number): string;
    isTagDisabled(tag: any, positionIndex: number): boolean;
    deleteTag(event: any, tag: any, index: number): void;
    itemId(tag: any, index: any): string;
    isGroupTag(tag: any): boolean;
    tagAriaHidden(index: any): boolean;
    private getPropField;
    static ɵfac: i0.ɵɵFactoryDeclaration<TagListComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TagListComponent, "kendo-taglist", never, { "tags": { "alias": "tags"; "required": false; }; "textField": { "alias": "textField"; "required": false; }; "valueField": { "alias": "valueField"; "required": false; }; "valueDepth": { "alias": "valueDepth"; "required": false; }; "focused": { "alias": "focused"; "required": false; }; "template": { "alias": "template"; "required": false; }; "groupTemplate": { "alias": "groupTemplate"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "tagPrefix": { "alias": "tagPrefix"; "required": false; }; "id": { "alias": "id"; "required": false; }; "size": { "alias": "size"; "required": false; }; "rounded": { "alias": "rounded"; "required": false; }; "fillMode": { "alias": "fillMode"; "required": false; }; "disabledIndices": { "alias": "disabledIndices"; "required": false; }; }, { "removeTag": "removeTag"; }, never, ["*"], true, never>;
}
