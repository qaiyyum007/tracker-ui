/**-----------------------------------------------------------------------------------------
* Copyright Â© 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../template-transformer/index");
const utils_1 = require("../utils");
const fs = __importStar(require("fs"));
function default_1(fileInfo, api) {
    const filePath = fileInfo.path;
    if (filePath.endsWith('.html')) {
        let updatedContent = fileInfo.source;
        updatedContent = (0, utils_1.htmlAttributeTransformer)({ ...fileInfo, source: updatedContent }, 'kendo-autocomplete', 'subtitle', 'adaptiveSubtitle');
        // Only write to file once after all transformations
        fs.writeFileSync(filePath, updatedContent, 'utf-8');
        return;
    }
    const j = api.jscodeshift;
    const rootSource = j(fileInfo.source);
    (0, index_1.templateTransformer)(rootSource, j, (root) => {
        (0, utils_1.templateAttributeTransformer)(root, 'kendo-autocomplete', 'subtitle', 'adaptiveSubtitle');
    });
    (0, utils_1.tsPropertyTransformer)(rootSource, j, 'AutoCompleteComponent', 'subtitle', 'adaptiveSubtitle');
    return rootSource.toSource();
}
exports.default = default_1;
