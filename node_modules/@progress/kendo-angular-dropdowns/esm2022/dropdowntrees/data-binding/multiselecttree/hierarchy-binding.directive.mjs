/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Directive, Input } from '@angular/core';
import { isChanged } from '@progress/kendo-angular-common';
import { DataBoundComponent, HierarchyBindingDirective } from '@progress/kendo-angular-treeview';
import * as i0 from "@angular/core";
import * as i1 from "@progress/kendo-angular-treeview";
/**
 * Retrieves child nodes when the provided data is hierarchical for the MultiSelectTree.
 *
 * * @example
 * ```html
 * <kendo-multiselecttree kendoMultiSelectTreeHierarchyBinding [nodes]="data" [valueField]="'id'"></kendo-multiselecttree>
 * ```
 *
 * @remarks
 * Applied to: {@link MultiSelectTreeComponent}.
 */
export class MultiSelectTreeHierarchyBindingDirective extends HierarchyBindingDirective {
    multiSelectTree;
    /**
     * Sets the nodes to display in the MultiSelectTree.
     */
    set nodes(nodes) {
        // Needs to be a setter so that it matches the accessor in FlatDataBindingDirective it extends
        this._nodes = nodes;
    }
    get nodes() {
        return this._nodes;
    }
    /**
     * @hidden
     */
    set filter(term) {
        super.filter = term;
    }
    constructor(multiSelectTree) {
        super(multiSelectTree);
        this.multiSelectTree = multiSelectTree;
    }
    ngOnChanges(changes) {
        if (isChanged('nodes', changes, false)) {
            this.multiSelectTree.nodes = changes['nodes'].currentValue;
            super.nodes = changes['nodes'].currentValue;
        }
        super.ngOnChanges(changes);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MultiSelectTreeHierarchyBindingDirective, deps: [{ token: i1.DataBoundComponent }], target: i0.ɵɵFactoryTarget.Directive });
    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.2.12", type: MultiSelectTreeHierarchyBindingDirective, isStandalone: true, selector: "[kendoMultiSelectTreeHierarchyBinding]", inputs: { nodes: ["kendoMultiSelectTreeHierarchyBinding", "nodes"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: MultiSelectTreeHierarchyBindingDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[kendoMultiSelectTreeHierarchyBinding]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.DataBoundComponent }]; }, propDecorators: { nodes: [{
                type: Input,
                args: ['kendoMultiSelectTreeHierarchyBinding']
            }] } });
