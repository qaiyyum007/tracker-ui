/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgModule } from '@angular/core';
import { KENDO_DROPDOWNTREE, KENDO_MULTISELECTTREE } from '../directives';
import { ResizeBatchService } from '@progress/kendo-angular-common';
import { DialogContainerService, DialogService, WindowContainerService, WindowService } from '@progress/kendo-angular-dialog';
import { IconsService } from '@progress/kendo-angular-icons';
import { PopupService } from '@progress/kendo-angular-popup';
import { AdaptiveService } from '@progress/kendo-angular-utils';
import * as i0 from "@angular/core";
import * as i1 from "./dropdowntree.component";
import * as i2 from "./data-binding/dropdowntree/flat-binding.directive";
import * as i3 from "./data-binding/dropdowntree/hierarchy-binding.directive";
import * as i4 from "./expanded-state/expand.directive";
import * as i5 from "./templates/node-template.directive";
import * as i6 from "../common/templates/header-template.directive";
import * as i7 from "../common/templates/footer-template.directive";
import * as i8 from "../common/templates/value-template.directive";
import * as i9 from "../common/templates/no-data-template.directive";
import * as i10 from "../common/localization/custom-messages.component";
import * as i11 from "./multiselecttree.component";
import * as i12 from "./data-binding/multiselecttree/flat-binding.directive";
import * as i13 from "./data-binding/multiselecttree/hierarchy-binding.directive";
import * as i14 from "./summary-tag/summary-tag.directive";
import * as i15 from "../common/templates/group-tag-template.directive";
import * as i16 from "../common/templates/tag-template.directive";
// IMPORTANT: NgModule export kept for backwards compatibility
/**
 * Required for adding all DropDownTree features in NgModule-based Angular applications.
 * - `MultiSelectTreeComponent`&mdash;The MultiSelectTree component class.
 * - `DropDownTreeComponent`&mdash;The DropDownTree component class.
 * - `MultiSelectTreeFlatBindingDirective`&mdash;The MultiSelectTree flat binding directive.
 * - `DropDownTreeFlatBindingDirective`&mdash;The DropDownTree flat binding directive.
 * - `MultiSelectTreeHierarchyBindingDirective`&mdash;The MultiSelectTree hierarchy binding directive.
 * - `DropDownTreeHierarchyBindingDirective`&mdash;The DropDownTree hierarchy binding directive.
 * - `DropDownTreesExpandDirective`&mdash;The DropDownTreesExpand directive.
 * - `NodeTemplateDirective`&mdash;The node template directive.
 * - `MultiSelectTreeSummaryTagDirective`&mdash;The MultiSelectTreeSummaryTag directive.
 * - `TagTemplateDirective`&mdash;The tag template directive.
 * - `GroupTagTemplateDirective`&mdash;The group tag template directive.
 * - `HeaderTemplateDirective`&mdash;The header template directive.
 * - `FooterTemplateDirective`&mdash;The footer template directive.
 * - `ValueTemplateDirective`&mdash;The value template directive.
 * - `NoDataTemplateDirective`&mdash;The no-data template directive.
 * - `CustomMessagesComponent`&mdash;The custom messages component.
 */
export class DropDownTreesModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DropDownTreesModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: DropDownTreesModule, imports: [i1.DropDownTreeComponent, i2.DropDownTreeFlatBindingDirective, i3.DropDownTreeHierarchyBindingDirective, i4.DropDownTreesExpandDirective, i5.NodeTemplateDirective, i6.HeaderTemplateDirective, i7.FooterTemplateDirective, i8.ValueTemplateDirective, i9.NoDataTemplateDirective, i10.CustomMessagesComponent, i11.MultiSelectTreeComponent, i12.MultiSelectTreeFlatBindingDirective, i13.MultiSelectTreeHierarchyBindingDirective, i4.DropDownTreesExpandDirective, i5.NodeTemplateDirective, i14.MultiSelectTreeSummaryTagDirective, i15.GroupTagTemplateDirective, i16.TagTemplateDirective, i6.HeaderTemplateDirective, i7.FooterTemplateDirective, i8.ValueTemplateDirective, i9.NoDataTemplateDirective, i10.CustomMessagesComponent], exports: [i1.DropDownTreeComponent, i2.DropDownTreeFlatBindingDirective, i3.DropDownTreeHierarchyBindingDirective, i4.DropDownTreesExpandDirective, i5.NodeTemplateDirective, i6.HeaderTemplateDirective, i7.FooterTemplateDirective, i8.ValueTemplateDirective, i9.NoDataTemplateDirective, i10.CustomMessagesComponent, i11.MultiSelectTreeComponent, i12.MultiSelectTreeFlatBindingDirective, i13.MultiSelectTreeHierarchyBindingDirective, i4.DropDownTreesExpandDirective, i5.NodeTemplateDirective, i14.MultiSelectTreeSummaryTagDirective, i15.GroupTagTemplateDirective, i16.TagTemplateDirective, i6.HeaderTemplateDirective, i7.FooterTemplateDirective, i8.ValueTemplateDirective, i9.NoDataTemplateDirective, i10.CustomMessagesComponent] });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DropDownTreesModule, providers: [
            IconsService,
            PopupService,
            ResizeBatchService,
            DialogContainerService,
            DialogService,
            WindowService,
            WindowContainerService,
            AdaptiveService
        ], imports: [i1.DropDownTreeComponent, i11.MultiSelectTreeComponent] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DropDownTreesModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...KENDO_DROPDOWNTREE, ...KENDO_MULTISELECTTREE],
                    exports: [...KENDO_DROPDOWNTREE, ...KENDO_MULTISELECTTREE],
                    providers: [
                        IconsService,
                        PopupService,
                        ResizeBatchService,
                        DialogContainerService,
                        DialogService,
                        WindowService,
                        WindowContainerService,
                        AdaptiveService
                    ]
                }]
        }] });
