/**-----------------------------------------------------------------------------------------
* Copyright © 2025 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { NgModule } from '@angular/core';
import { KENDO_COMBOBOX, KENDO_MULTICOLUMNCOMBOBOX } from '../directives';
import { KENDO_ADORNMENTS, KENDO_TOGGLEBUTTONTABSTOP, ResizeBatchService } from '@progress/kendo-angular-common';
import { IconsService } from '@progress/kendo-angular-icons';
import { PopupService } from '@progress/kendo-angular-popup';
import { AdaptiveService } from '@progress/kendo-angular-utils';
import * as i0 from "@angular/core";
import * as i1 from "./combobox.component";
import * as i2 from "../common/templates/fixed-group-template.directive";
import * as i3 from "../common/templates/footer-template.directive";
import * as i4 from "../common/templates/group-template.directive";
import * as i5 from "../common/templates/header-template.directive";
import * as i6 from "../common/templates/item-template.directive";
import * as i7 from "../common/templates/no-data-template.directive";
import * as i8 from "../common/filtering/filter.directive";
import * as i9 from "../common/localization/custom-messages.component";
import * as i10 from "@progress/kendo-angular-common";
import * as i11 from "./multicolumncombobox.component";
import * as i12 from "./combobox-column/combobox-column.component";
import * as i13 from "./combobox-column/column-header-template.directive";
import * as i14 from "./combobox-column/column-cell-template.directive";
// IMPORTANT: NgModule export kept for backwards compatibility
/**
 * Required for adding all ComboBox features in NgModule-based Angular applications.
 *
 * The package exports:
 * - `ComboBoxComponent`&mdash;The ComboBox component class.
 * - `ComboBoxColumnComponent`&mdash;The ComboBoxColumn component class.
 * - `MultiColumnComboBoxComponent`&mdash;The MultiColumnComboBox component class.
 * - `ItemTemplateDirective`&mdash;The item template directive.
 * - `HeaderTemplateDirective`&mdash;The header template directive.
 * - `FooterTemplateDirective`&mdash;The footer template directive.
 * - `NoDataTemplateDirective`&mdash;The no data template directive.
 * - `FixedGroupTemplateDirective`&mdash;The fixed group template directive.
 * - `GroupTemplateDirective`&mdash;The group template directive.
 * - `FilterDirective`&mdash;The filter directive.
 * - `CustomMessagesComponent`&mdash;The custom messages component.
 * - `SuffixTemplateDirective`&mdash;The suffix template directive.
 * - `PrefixTemplateDirective`&mdash;The prefix template directive.
 *
 * @example
 * ```typescript
 * import { ComboBoxModule } from '@progress/kendo-angular-dropdowns';
 *
 * @NgModule({
 *   imports: [ComboBoxModule]
 * })
 * class AppModule {}
 * ```
 */
export class ComboBoxModule {
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ComboBoxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: ComboBoxModule, imports: [i1.ComboBoxComponent, i2.FixedGroupTemplateDirective, i3.FooterTemplateDirective, i4.GroupTemplateDirective, i5.HeaderTemplateDirective, i6.ItemTemplateDirective, i7.NoDataTemplateDirective, i8.FilterDirective, i9.CustomMessagesComponent, i10.SuffixTemplateDirective, i10.PrefixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective, i11.MultiColumnComboBoxComponent, i12.ComboBoxColumnComponent, i13.ColumnHeaderTemplateDirective, i14.ColumnCellTemplateDirective, i2.FixedGroupTemplateDirective, i3.FooterTemplateDirective, i4.GroupTemplateDirective, i5.HeaderTemplateDirective, i6.ItemTemplateDirective, i7.NoDataTemplateDirective, i8.FilterDirective, i9.CustomMessagesComponent, i10.SuffixTemplateDirective, i10.PrefixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective, i10.PrefixTemplateDirective, i10.SuffixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective], exports: [i1.ComboBoxComponent, i2.FixedGroupTemplateDirective, i3.FooterTemplateDirective, i4.GroupTemplateDirective, i5.HeaderTemplateDirective, i6.ItemTemplateDirective, i7.NoDataTemplateDirective, i8.FilterDirective, i9.CustomMessagesComponent, i10.SuffixTemplateDirective, i10.PrefixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective, i11.MultiColumnComboBoxComponent, i12.ComboBoxColumnComponent, i13.ColumnHeaderTemplateDirective, i14.ColumnCellTemplateDirective, i2.FixedGroupTemplateDirective, i3.FooterTemplateDirective, i4.GroupTemplateDirective, i5.HeaderTemplateDirective, i6.ItemTemplateDirective, i7.NoDataTemplateDirective, i8.FilterDirective, i9.CustomMessagesComponent, i10.SuffixTemplateDirective, i10.PrefixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective, i10.PrefixTemplateDirective, i10.SuffixTemplateDirective, i10.SeparatorComponent, i10.ToggleButtonTabStopDirective] });
    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ComboBoxModule, providers: [
            PopupService,
            ResizeBatchService,
            IconsService,
            AdaptiveService
        ], imports: [i1.ComboBoxComponent, i10.SeparatorComponent, i11.MultiColumnComboBoxComponent, i10.SeparatorComponent, i10.SeparatorComponent] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: ComboBoxModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [...KENDO_COMBOBOX, ...KENDO_MULTICOLUMNCOMBOBOX, ...KENDO_ADORNMENTS, ...KENDO_TOGGLEBUTTONTABSTOP],
                    exports: [...KENDO_COMBOBOX, ...KENDO_MULTICOLUMNCOMBOBOX, ...KENDO_ADORNMENTS, ...KENDO_TOGGLEBUTTONTABSTOP],
                    providers: [
                        PopupService,
                        ResizeBatchService,
                        IconsService,
                        AdaptiveService
                    ]
                }]
        }] });
